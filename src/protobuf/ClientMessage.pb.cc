// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ClientMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PBC2SLoginCheckReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2SLoginCheckReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBS2CLoginCheckRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBS2CLoginCheckRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2SLoginRegisterReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2SLoginRegisterReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBS2CLoginRegisterRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBS2CLoginRegisterRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2SCreateUserReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2SCreateUserReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBS2CCreateUserRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBS2CCreateUserRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2SDeleteUserReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2SDeleteUserReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBS2CDeleteUserRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBS2CDeleteUserRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2SGetPlayerInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2SGetPlayerInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPlayerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPlayerInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBS2CGetPlayerInfoRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBS2CGetPlayerInfoRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2SGetHeroListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2SGetHeroListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBHero_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBHero_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBS2CGetHeroListRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBS2CGetHeroListRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2SGetHeroInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2SGetHeroInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBHeroInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBHeroInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBS2CGetHeroInfoRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBS2CGetHeroInfoRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2SHeroLevelUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2SHeroLevelUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBS2CHeroLevelUpRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBS2CHeroLevelUpRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2SDeleteHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2SDeleteHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBS2CDeleteHeroRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBS2CDeleteHeroRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2SGetHeroTeamReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2SGetHeroTeamReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBHeroTeam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBHeroTeam_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBS2CGetHeroTeamRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBS2CGetHeroTeamRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2SUpdateHeroTeamReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2SUpdateHeroTeamReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBS2CUpdateHeroTeamRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBS2CUpdateHeroTeamRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2SBuyHeroReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2SBuyHeroReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBS2CBuyHeroRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBS2CBuyHeroRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2SGetPlayerListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2SGetPlayerListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPlayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBS2CGetPlayerListRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBS2CGetPlayerListRes_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* eMessageType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ClientMessage_2eproto() {
  protobuf_AddDesc_ClientMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ClientMessage.proto");
  GOOGLE_CHECK(file != NULL);
  PBC2SLoginCheckReq_descriptor_ = file->message_type(0);
  static const int PBC2SLoginCheckReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SLoginCheckReq, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SLoginCheckReq, password_),
  };
  PBC2SLoginCheckReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2SLoginCheckReq_descriptor_,
      PBC2SLoginCheckReq::default_instance_,
      PBC2SLoginCheckReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SLoginCheckReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SLoginCheckReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2SLoginCheckReq));
  PBS2CLoginCheckRes_descriptor_ = file->message_type(1);
  static const int PBS2CLoginCheckRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CLoginCheckRes, logincheckresult_),
  };
  PBS2CLoginCheckRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBS2CLoginCheckRes_descriptor_,
      PBS2CLoginCheckRes::default_instance_,
      PBS2CLoginCheckRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CLoginCheckRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CLoginCheckRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBS2CLoginCheckRes));
  PBC2SLoginRegisterReq_descriptor_ = file->message_type(2);
  static const int PBC2SLoginRegisterReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SLoginRegisterReq, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SLoginRegisterReq, password_),
  };
  PBC2SLoginRegisterReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2SLoginRegisterReq_descriptor_,
      PBC2SLoginRegisterReq::default_instance_,
      PBC2SLoginRegisterReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SLoginRegisterReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SLoginRegisterReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2SLoginRegisterReq));
  PBS2CLoginRegisterRes_descriptor_ = file->message_type(3);
  static const int PBS2CLoginRegisterRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CLoginRegisterRes, loginregisterresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CLoginRegisterRes, loginid_),
  };
  PBS2CLoginRegisterRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBS2CLoginRegisterRes_descriptor_,
      PBS2CLoginRegisterRes::default_instance_,
      PBS2CLoginRegisterRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CLoginRegisterRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CLoginRegisterRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBS2CLoginRegisterRes));
  PBC2SCreateUserReq_descriptor_ = file->message_type(4);
  static const int PBC2SCreateUserReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SCreateUserReq, playername_),
  };
  PBC2SCreateUserReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2SCreateUserReq_descriptor_,
      PBC2SCreateUserReq::default_instance_,
      PBC2SCreateUserReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SCreateUserReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SCreateUserReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2SCreateUserReq));
  PBS2CCreateUserRes_descriptor_ = file->message_type(5);
  static const int PBS2CCreateUserRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CCreateUserRes, createuserresult_),
  };
  PBS2CCreateUserRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBS2CCreateUserRes_descriptor_,
      PBS2CCreateUserRes::default_instance_,
      PBS2CCreateUserRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CCreateUserRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CCreateUserRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBS2CCreateUserRes));
  PBC2SDeleteUserReq_descriptor_ = file->message_type(6);
  static const int PBC2SDeleteUserReq_offsets_[1] = {
  };
  PBC2SDeleteUserReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2SDeleteUserReq_descriptor_,
      PBC2SDeleteUserReq::default_instance_,
      PBC2SDeleteUserReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SDeleteUserReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SDeleteUserReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2SDeleteUserReq));
  PBS2CDeleteUserRes_descriptor_ = file->message_type(7);
  static const int PBS2CDeleteUserRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CDeleteUserRes, deleteuserresult_),
  };
  PBS2CDeleteUserRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBS2CDeleteUserRes_descriptor_,
      PBS2CDeleteUserRes::default_instance_,
      PBS2CDeleteUserRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CDeleteUserRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CDeleteUserRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBS2CDeleteUserRes));
  PBC2SGetPlayerInfoReq_descriptor_ = file->message_type(8);
  static const int PBC2SGetPlayerInfoReq_offsets_[1] = {
  };
  PBC2SGetPlayerInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2SGetPlayerInfoReq_descriptor_,
      PBC2SGetPlayerInfoReq::default_instance_,
      PBC2SGetPlayerInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SGetPlayerInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SGetPlayerInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2SGetPlayerInfoReq));
  PBPlayerInfo_descriptor_ = file->message_type(9);
  static const int PBPlayerInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerInfo, playerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerInfo, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerInfo, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerInfo, empirical_),
  };
  PBPlayerInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBPlayerInfo_descriptor_,
      PBPlayerInfo::default_instance_,
      PBPlayerInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBPlayerInfo));
  PBS2CGetPlayerInfoRes_descriptor_ = file->message_type(10);
  static const int PBS2CGetPlayerInfoRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetPlayerInfoRes, getplayerinforesult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetPlayerInfoRes, playerinfo_),
  };
  PBS2CGetPlayerInfoRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBS2CGetPlayerInfoRes_descriptor_,
      PBS2CGetPlayerInfoRes::default_instance_,
      PBS2CGetPlayerInfoRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetPlayerInfoRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetPlayerInfoRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBS2CGetPlayerInfoRes));
  PBC2SGetHeroListReq_descriptor_ = file->message_type(11);
  static const int PBC2SGetHeroListReq_offsets_[1] = {
  };
  PBC2SGetHeroListReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2SGetHeroListReq_descriptor_,
      PBC2SGetHeroListReq::default_instance_,
      PBC2SGetHeroListReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SGetHeroListReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SGetHeroListReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2SGetHeroListReq));
  PBHero_descriptor_ = file->message_type(12);
  static const int PBHero_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHero, heroinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHero, heroindex_),
  };
  PBHero_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBHero_descriptor_,
      PBHero::default_instance_,
      PBHero_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHero, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHero, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBHero));
  PBS2CGetHeroListRes_descriptor_ = file->message_type(13);
  static const int PBS2CGetHeroListRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetHeroListRes, getherolistresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetHeroListRes, herolist_),
  };
  PBS2CGetHeroListRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBS2CGetHeroListRes_descriptor_,
      PBS2CGetHeroListRes::default_instance_,
      PBS2CGetHeroListRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetHeroListRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetHeroListRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBS2CGetHeroListRes));
  PBC2SGetHeroInfoReq_descriptor_ = file->message_type(14);
  static const int PBC2SGetHeroInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SGetHeroInfoReq, heroindex_),
  };
  PBC2SGetHeroInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2SGetHeroInfoReq_descriptor_,
      PBC2SGetHeroInfoReq::default_instance_,
      PBC2SGetHeroInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SGetHeroInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SGetHeroInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2SGetHeroInfoReq));
  PBHeroInfo_descriptor_ = file->message_type(15);
  static const int PBHeroInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroInfo, hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroInfo, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroInfo, defend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroInfo, avoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroInfo, attach_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroInfo, heroskillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroInfo, level_),
  };
  PBHeroInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBHeroInfo_descriptor_,
      PBHeroInfo::default_instance_,
      PBHeroInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBHeroInfo));
  PBS2CGetHeroInfoRes_descriptor_ = file->message_type(16);
  static const int PBS2CGetHeroInfoRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetHeroInfoRes, getheroinforesult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetHeroInfoRes, heroinfo_),
  };
  PBS2CGetHeroInfoRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBS2CGetHeroInfoRes_descriptor_,
      PBS2CGetHeroInfoRes::default_instance_,
      PBS2CGetHeroInfoRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetHeroInfoRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetHeroInfoRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBS2CGetHeroInfoRes));
  PBC2SHeroLevelUpReq_descriptor_ = file->message_type(17);
  static const int PBC2SHeroLevelUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SHeroLevelUpReq, heroindex_),
  };
  PBC2SHeroLevelUpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2SHeroLevelUpReq_descriptor_,
      PBC2SHeroLevelUpReq::default_instance_,
      PBC2SHeroLevelUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SHeroLevelUpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SHeroLevelUpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2SHeroLevelUpReq));
  PBS2CHeroLevelUpRes_descriptor_ = file->message_type(18);
  static const int PBS2CHeroLevelUpRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CHeroLevelUpRes, herolevelupresult_),
  };
  PBS2CHeroLevelUpRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBS2CHeroLevelUpRes_descriptor_,
      PBS2CHeroLevelUpRes::default_instance_,
      PBS2CHeroLevelUpRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CHeroLevelUpRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CHeroLevelUpRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBS2CHeroLevelUpRes));
  PBC2SDeleteHeroReq_descriptor_ = file->message_type(19);
  static const int PBC2SDeleteHeroReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SDeleteHeroReq, heroindex_),
  };
  PBC2SDeleteHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2SDeleteHeroReq_descriptor_,
      PBC2SDeleteHeroReq::default_instance_,
      PBC2SDeleteHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SDeleteHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SDeleteHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2SDeleteHeroReq));
  PBS2CDeleteHeroRes_descriptor_ = file->message_type(20);
  static const int PBS2CDeleteHeroRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CDeleteHeroRes, deleteheroresult_),
  };
  PBS2CDeleteHeroRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBS2CDeleteHeroRes_descriptor_,
      PBS2CDeleteHeroRes::default_instance_,
      PBS2CDeleteHeroRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CDeleteHeroRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CDeleteHeroRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBS2CDeleteHeroRes));
  PBC2SGetHeroTeamReq_descriptor_ = file->message_type(21);
  static const int PBC2SGetHeroTeamReq_offsets_[1] = {
  };
  PBC2SGetHeroTeamReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2SGetHeroTeamReq_descriptor_,
      PBC2SGetHeroTeamReq::default_instance_,
      PBC2SGetHeroTeamReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SGetHeroTeamReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SGetHeroTeamReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2SGetHeroTeamReq));
  PBHeroTeam_descriptor_ = file->message_type(22);
  static const int PBHeroTeam_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroTeam, healthpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroTeam, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroTeam, defend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroTeam, avoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroTeam, attach_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroTeam, heroinfoid_),
  };
  PBHeroTeam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBHeroTeam_descriptor_,
      PBHeroTeam::default_instance_,
      PBHeroTeam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroTeam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBHeroTeam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBHeroTeam));
  PBS2CGetHeroTeamRes_descriptor_ = file->message_type(23);
  static const int PBS2CGetHeroTeamRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetHeroTeamRes, getheroteamresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetHeroTeamRes, heroteam_),
  };
  PBS2CGetHeroTeamRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBS2CGetHeroTeamRes_descriptor_,
      PBS2CGetHeroTeamRes::default_instance_,
      PBS2CGetHeroTeamRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetHeroTeamRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetHeroTeamRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBS2CGetHeroTeamRes));
  PBC2SUpdateHeroTeamReq_descriptor_ = file->message_type(24);
  static const int PBC2SUpdateHeroTeamReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SUpdateHeroTeamReq, heroindex_),
  };
  PBC2SUpdateHeroTeamReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2SUpdateHeroTeamReq_descriptor_,
      PBC2SUpdateHeroTeamReq::default_instance_,
      PBC2SUpdateHeroTeamReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SUpdateHeroTeamReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SUpdateHeroTeamReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2SUpdateHeroTeamReq));
  PBS2CUpdateHeroTeamRes_descriptor_ = file->message_type(25);
  static const int PBS2CUpdateHeroTeamRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CUpdateHeroTeamRes, updateheroteamresult_),
  };
  PBS2CUpdateHeroTeamRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBS2CUpdateHeroTeamRes_descriptor_,
      PBS2CUpdateHeroTeamRes::default_instance_,
      PBS2CUpdateHeroTeamRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CUpdateHeroTeamRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CUpdateHeroTeamRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBS2CUpdateHeroTeamRes));
  PBC2SBuyHeroReq_descriptor_ = file->message_type(26);
  static const int PBC2SBuyHeroReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SBuyHeroReq, heroid_),
  };
  PBC2SBuyHeroReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2SBuyHeroReq_descriptor_,
      PBC2SBuyHeroReq::default_instance_,
      PBC2SBuyHeroReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SBuyHeroReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SBuyHeroReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2SBuyHeroReq));
  PBS2CBuyHeroRes_descriptor_ = file->message_type(27);
  static const int PBS2CBuyHeroRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CBuyHeroRes, buyheroresult_),
  };
  PBS2CBuyHeroRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBS2CBuyHeroRes_descriptor_,
      PBS2CBuyHeroRes::default_instance_,
      PBS2CBuyHeroRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CBuyHeroRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CBuyHeroRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBS2CBuyHeroRes));
  PBC2SGetPlayerListReq_descriptor_ = file->message_type(28);
  static const int PBC2SGetPlayerListReq_offsets_[1] = {
  };
  PBC2SGetPlayerListReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2SGetPlayerListReq_descriptor_,
      PBC2SGetPlayerListReq::default_instance_,
      PBC2SGetPlayerListReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SGetPlayerListReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2SGetPlayerListReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2SGetPlayerListReq));
  PBPlayer_descriptor_ = file->message_type(29);
  static const int PBPlayer_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayer, playerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayer, username_),
  };
  PBPlayer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBPlayer_descriptor_,
      PBPlayer::default_instance_,
      PBPlayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBPlayer));
  PBS2CGetPlayerListRes_descriptor_ = file->message_type(30);
  static const int PBS2CGetPlayerListRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetPlayerListRes, getplayerlistresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetPlayerListRes, playerlist_),
  };
  PBS2CGetPlayerListRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBS2CGetPlayerListRes_descriptor_,
      PBS2CGetPlayerListRes::default_instance_,
      PBS2CGetPlayerListRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetPlayerListRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBS2CGetPlayerListRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBS2CGetPlayerListRes));
  eMessageType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ClientMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2SLoginCheckReq_descriptor_, &PBC2SLoginCheckReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBS2CLoginCheckRes_descriptor_, &PBS2CLoginCheckRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2SLoginRegisterReq_descriptor_, &PBC2SLoginRegisterReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBS2CLoginRegisterRes_descriptor_, &PBS2CLoginRegisterRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2SCreateUserReq_descriptor_, &PBC2SCreateUserReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBS2CCreateUserRes_descriptor_, &PBS2CCreateUserRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2SDeleteUserReq_descriptor_, &PBC2SDeleteUserReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBS2CDeleteUserRes_descriptor_, &PBS2CDeleteUserRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2SGetPlayerInfoReq_descriptor_, &PBC2SGetPlayerInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBPlayerInfo_descriptor_, &PBPlayerInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBS2CGetPlayerInfoRes_descriptor_, &PBS2CGetPlayerInfoRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2SGetHeroListReq_descriptor_, &PBC2SGetHeroListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBHero_descriptor_, &PBHero::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBS2CGetHeroListRes_descriptor_, &PBS2CGetHeroListRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2SGetHeroInfoReq_descriptor_, &PBC2SGetHeroInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBHeroInfo_descriptor_, &PBHeroInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBS2CGetHeroInfoRes_descriptor_, &PBS2CGetHeroInfoRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2SHeroLevelUpReq_descriptor_, &PBC2SHeroLevelUpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBS2CHeroLevelUpRes_descriptor_, &PBS2CHeroLevelUpRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2SDeleteHeroReq_descriptor_, &PBC2SDeleteHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBS2CDeleteHeroRes_descriptor_, &PBS2CDeleteHeroRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2SGetHeroTeamReq_descriptor_, &PBC2SGetHeroTeamReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBHeroTeam_descriptor_, &PBHeroTeam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBS2CGetHeroTeamRes_descriptor_, &PBS2CGetHeroTeamRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2SUpdateHeroTeamReq_descriptor_, &PBC2SUpdateHeroTeamReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBS2CUpdateHeroTeamRes_descriptor_, &PBS2CUpdateHeroTeamRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2SBuyHeroReq_descriptor_, &PBC2SBuyHeroReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBS2CBuyHeroRes_descriptor_, &PBS2CBuyHeroRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2SGetPlayerListReq_descriptor_, &PBC2SGetPlayerListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBPlayer_descriptor_, &PBPlayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBS2CGetPlayerListRes_descriptor_, &PBS2CGetPlayerListRes::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ClientMessage_2eproto() {
  delete PBC2SLoginCheckReq::default_instance_;
  delete PBC2SLoginCheckReq_reflection_;
  delete PBS2CLoginCheckRes::default_instance_;
  delete PBS2CLoginCheckRes_reflection_;
  delete PBC2SLoginRegisterReq::default_instance_;
  delete PBC2SLoginRegisterReq_reflection_;
  delete PBS2CLoginRegisterRes::default_instance_;
  delete PBS2CLoginRegisterRes_reflection_;
  delete PBC2SCreateUserReq::default_instance_;
  delete PBC2SCreateUserReq_reflection_;
  delete PBS2CCreateUserRes::default_instance_;
  delete PBS2CCreateUserRes_reflection_;
  delete PBC2SDeleteUserReq::default_instance_;
  delete PBC2SDeleteUserReq_reflection_;
  delete PBS2CDeleteUserRes::default_instance_;
  delete PBS2CDeleteUserRes_reflection_;
  delete PBC2SGetPlayerInfoReq::default_instance_;
  delete PBC2SGetPlayerInfoReq_reflection_;
  delete PBPlayerInfo::default_instance_;
  delete PBPlayerInfo_reflection_;
  delete PBS2CGetPlayerInfoRes::default_instance_;
  delete PBS2CGetPlayerInfoRes_reflection_;
  delete PBC2SGetHeroListReq::default_instance_;
  delete PBC2SGetHeroListReq_reflection_;
  delete PBHero::default_instance_;
  delete PBHero_reflection_;
  delete PBS2CGetHeroListRes::default_instance_;
  delete PBS2CGetHeroListRes_reflection_;
  delete PBC2SGetHeroInfoReq::default_instance_;
  delete PBC2SGetHeroInfoReq_reflection_;
  delete PBHeroInfo::default_instance_;
  delete PBHeroInfo_reflection_;
  delete PBS2CGetHeroInfoRes::default_instance_;
  delete PBS2CGetHeroInfoRes_reflection_;
  delete PBC2SHeroLevelUpReq::default_instance_;
  delete PBC2SHeroLevelUpReq_reflection_;
  delete PBS2CHeroLevelUpRes::default_instance_;
  delete PBS2CHeroLevelUpRes_reflection_;
  delete PBC2SDeleteHeroReq::default_instance_;
  delete PBC2SDeleteHeroReq_reflection_;
  delete PBS2CDeleteHeroRes::default_instance_;
  delete PBS2CDeleteHeroRes_reflection_;
  delete PBC2SGetHeroTeamReq::default_instance_;
  delete PBC2SGetHeroTeamReq_reflection_;
  delete PBHeroTeam::default_instance_;
  delete PBHeroTeam_reflection_;
  delete PBS2CGetHeroTeamRes::default_instance_;
  delete PBS2CGetHeroTeamRes_reflection_;
  delete PBC2SUpdateHeroTeamReq::default_instance_;
  delete PBC2SUpdateHeroTeamReq_reflection_;
  delete PBS2CUpdateHeroTeamRes::default_instance_;
  delete PBS2CUpdateHeroTeamRes_reflection_;
  delete PBC2SBuyHeroReq::default_instance_;
  delete PBC2SBuyHeroReq_reflection_;
  delete PBS2CBuyHeroRes::default_instance_;
  delete PBS2CBuyHeroRes_reflection_;
  delete PBC2SGetPlayerListReq::default_instance_;
  delete PBC2SGetPlayerListReq_reflection_;
  delete PBPlayer::default_instance_;
  delete PBPlayer_reflection_;
  delete PBS2CGetPlayerListRes::default_instance_;
  delete PBS2CGetPlayerListRes_reflection_;
}

void protobuf_AddDesc_ClientMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ClientMessage.proto\"8\n\022PBC2SLoginCheck"
    "Req\022\020\n\010Username\030\001 \002(\t\022\020\n\010Password\030\002 \002(\t\""
    ".\n\022PBS2CLoginCheckRes\022\030\n\020LoginCheckResul"
    "t\030\001 \002(\005\";\n\025PBC2SLoginRegisterReq\022\020\n\010User"
    "name\030\001 \002(\t\022\020\n\010Password\030\002 \002(\t\"E\n\025PBS2CLog"
    "inRegisterRes\022\033\n\023LoginRegisterResult\030\001 \002"
    "(\005\022\017\n\007LoginID\030\002 \001(\005\"(\n\022PBC2SCreateUserRe"
    "q\022\022\n\nPlayerName\030\001 \002(\t\".\n\022PBS2CCreateUser"
    "Res\022\030\n\020CreateUserResult\030\001 \002(\005\"\024\n\022PBC2SDe"
    "leteUserReq\".\n\022PBS2CDeleteUserRes\022\030\n\020Del"
    "eteUserResult\030\001 \002(\005\"\027\n\025PBC2SGetPlayerInf"
    "oReq\"S\n\014PBPlayerInfo\022\020\n\010PlayerID\030\001 \001(\005\022\020"
    "\n\010Username\030\002 \001(\t\022\014\n\004Gold\030\003 \001(\005\022\021\n\tEmpiri"
    "cal\030\004 \001(\005\"W\n\025PBS2CGetPlayerInfoRes\022\033\n\023Ge"
    "tPlayerInfoResult\030\001 \002(\005\022!\n\nPlayerInfo\030\002 "
    "\001(\0132\r.PBPlayerInfo\"\025\n\023PBC2SGetHeroListRe"
    "q\"/\n\006PBHero\022\022\n\nHeroInfoID\030\001 \001(\005\022\021\n\tHeroI"
    "ndex\030\002 \001(\005\"K\n\023PBS2CGetHeroListRes\022\031\n\021Get"
    "HeroListResult\030\001 \002(\005\022\031\n\010HeroList\030\002 \003(\0132\007"
    ".PBHero\"(\n\023PBC2SGetHeroInfoReq\022\021\n\tHeroIn"
    "dex\030\001 \002(\005\"\205\001\n\nPBHeroInfo\022\025\n\004Hero\030\001 \001(\0132\007"
    ".PBHero\022\r\n\005Speed\030\002 \001(\005\022\016\n\006Defend\030\003 \001(\005\022\r"
    "\n\005Avoid\030\004 \001(\005\022\016\n\006Attach\030\005 \001(\005\022\023\n\013HeroSki"
    "llID\030\006 \001(\005\022\r\n\005Level\030\007 \001(\005\"O\n\023PBS2CGetHer"
    "oInfoRes\022\031\n\021GetHeroInfoResult\030\001 \002(\005\022\035\n\010H"
    "eroInfo\030\002 \001(\0132\013.PBHeroInfo\"(\n\023PBC2SHeroL"
    "evelUpReq\022\021\n\tHeroIndex\030\001 \002(\005\"0\n\023PBS2CHer"
    "oLevelUpRes\022\031\n\021HeroLevelUpResult\030\001 \002(\005\"\'"
    "\n\022PBC2SDeleteHeroReq\022\021\n\tHeroIndex\030\001 \002(\005\""
    ".\n\022PBS2CDeleteHeroRes\022\030\n\020DeleteHeroResul"
    "t\030\001 \002(\005\"\025\n\023PBC2SGetHeroTeamReq\"s\n\nPBHero"
    "Team\022\023\n\013HealthPoint\030\001 \001(\005\022\r\n\005Speed\030\002 \001(\005"
    "\022\016\n\006Defend\030\003 \001(\005\022\r\n\005Avoid\030\004 \001(\005\022\016\n\006Attac"
    "h\030\005 \001(\005\022\022\n\nHeroInfoID\030\006 \003(\005\"O\n\023PBS2CGetH"
    "eroTeamRes\022\031\n\021GetHeroTeamResult\030\001 \002(\005\022\035\n"
    "\010HeroTeam\030\002 \001(\0132\013.PBHeroTeam\"+\n\026PBC2SUpd"
    "ateHeroTeamReq\022\021\n\tHeroIndex\030\001 \003(\005\"6\n\026PBS"
    "2CUpdateHeroTeamRes\022\034\n\024UpdateHeroTeamRes"
    "ult\030\001 \002(\005\"!\n\017PBC2SBuyHeroReq\022\016\n\006HeroID\030\001"
    " \001(\005\"(\n\017PBS2CBuyHeroRes\022\025\n\rBuyHeroResult"
    "\030\001 \002(\005\"\027\n\025PBC2SGetPlayerListReq\".\n\010PBPla"
    "yer\022\020\n\010PlayerID\030\001 \001(\005\022\020\n\010Username\030\002 \001(\t\""
    "S\n\025PBS2CGetPlayerListRes\022\033\n\023GetPlayerLis"
    "tResult\030\001 \002(\005\022\035\n\nPlayerList\030\002 \003(\0132\t.PBPl"
    "ayer*\316\005\n\014eMessageType\022\030\n\024TypeC2SLoginChe"
    "ckReq\020\001\022\030\n\024TypeS2CLoginCheckRes\020\002\022\033\n\027Typ"
    "eC2SLoginRegisterReq\020\003\022\033\n\027TypeS2CLoginRe"
    "gisterRes\020\004\022\030\n\024TypeC2SCreateUserReq\020\005\022\030\n"
    "\024TypeS2CCreateUserRes\020\006\022\030\n\024TypeC2SDelete"
    "UserReq\020\007\022\030\n\024TypeS2CDeleteUserRes\020\010\022\033\n\027T"
    "ypeC2SGetPlayerInfoReq\020\t\022\033\n\027TypeS2CGetPl"
    "ayerInfoRes\020\n\022\031\n\025TypeC2SGetHeroListReq\020\013"
    "\022\031\n\025TypeS2CGetHeroListRes\020\014\022\031\n\025TypeC2SGe"
    "tHeroInfoReq\020\r\022\031\n\025TypeS2CGetHeroInfoRes\020"
    "\016\022\031\n\025TypeC2SHeroLevelUpReq\020\017\022\031\n\025TypeS2CH"
    "eroLevelUpRes\020\020\022\030\n\024TypeC2SDeleteHeroReq\020"
    "\021\022\030\n\024TypeS2CDeleteHeroRes\020\022\022\031\n\025TypeC2SGe"
    "tHeroTeamReq\020\023\022\031\n\025TypeS2CGetHeroTeamRes\020"
    "\024\022\034\n\030TypeC2SUpdateHeroTeamReq\020\025\022\034\n\030TypeS"
    "2CUpdateHeroTeamRes\020\026\022\025\n\021TypeC2SBuyHeroR"
    "eq\020\027\022\025\n\021TypeS2CBuyHeroRes\020\030\022\033\n\027TypeC2SGe"
    "tPlayerListReq\020\031\022\033\n\027TypeS2CGetPlayerList"
    "Res\020\032", 2485);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ClientMessage.proto", &protobuf_RegisterTypes);
  PBC2SLoginCheckReq::default_instance_ = new PBC2SLoginCheckReq();
  PBS2CLoginCheckRes::default_instance_ = new PBS2CLoginCheckRes();
  PBC2SLoginRegisterReq::default_instance_ = new PBC2SLoginRegisterReq();
  PBS2CLoginRegisterRes::default_instance_ = new PBS2CLoginRegisterRes();
  PBC2SCreateUserReq::default_instance_ = new PBC2SCreateUserReq();
  PBS2CCreateUserRes::default_instance_ = new PBS2CCreateUserRes();
  PBC2SDeleteUserReq::default_instance_ = new PBC2SDeleteUserReq();
  PBS2CDeleteUserRes::default_instance_ = new PBS2CDeleteUserRes();
  PBC2SGetPlayerInfoReq::default_instance_ = new PBC2SGetPlayerInfoReq();
  PBPlayerInfo::default_instance_ = new PBPlayerInfo();
  PBS2CGetPlayerInfoRes::default_instance_ = new PBS2CGetPlayerInfoRes();
  PBC2SGetHeroListReq::default_instance_ = new PBC2SGetHeroListReq();
  PBHero::default_instance_ = new PBHero();
  PBS2CGetHeroListRes::default_instance_ = new PBS2CGetHeroListRes();
  PBC2SGetHeroInfoReq::default_instance_ = new PBC2SGetHeroInfoReq();
  PBHeroInfo::default_instance_ = new PBHeroInfo();
  PBS2CGetHeroInfoRes::default_instance_ = new PBS2CGetHeroInfoRes();
  PBC2SHeroLevelUpReq::default_instance_ = new PBC2SHeroLevelUpReq();
  PBS2CHeroLevelUpRes::default_instance_ = new PBS2CHeroLevelUpRes();
  PBC2SDeleteHeroReq::default_instance_ = new PBC2SDeleteHeroReq();
  PBS2CDeleteHeroRes::default_instance_ = new PBS2CDeleteHeroRes();
  PBC2SGetHeroTeamReq::default_instance_ = new PBC2SGetHeroTeamReq();
  PBHeroTeam::default_instance_ = new PBHeroTeam();
  PBS2CGetHeroTeamRes::default_instance_ = new PBS2CGetHeroTeamRes();
  PBC2SUpdateHeroTeamReq::default_instance_ = new PBC2SUpdateHeroTeamReq();
  PBS2CUpdateHeroTeamRes::default_instance_ = new PBS2CUpdateHeroTeamRes();
  PBC2SBuyHeroReq::default_instance_ = new PBC2SBuyHeroReq();
  PBS2CBuyHeroRes::default_instance_ = new PBS2CBuyHeroRes();
  PBC2SGetPlayerListReq::default_instance_ = new PBC2SGetPlayerListReq();
  PBPlayer::default_instance_ = new PBPlayer();
  PBS2CGetPlayerListRes::default_instance_ = new PBS2CGetPlayerListRes();
  PBC2SLoginCheckReq::default_instance_->InitAsDefaultInstance();
  PBS2CLoginCheckRes::default_instance_->InitAsDefaultInstance();
  PBC2SLoginRegisterReq::default_instance_->InitAsDefaultInstance();
  PBS2CLoginRegisterRes::default_instance_->InitAsDefaultInstance();
  PBC2SCreateUserReq::default_instance_->InitAsDefaultInstance();
  PBS2CCreateUserRes::default_instance_->InitAsDefaultInstance();
  PBC2SDeleteUserReq::default_instance_->InitAsDefaultInstance();
  PBS2CDeleteUserRes::default_instance_->InitAsDefaultInstance();
  PBC2SGetPlayerInfoReq::default_instance_->InitAsDefaultInstance();
  PBPlayerInfo::default_instance_->InitAsDefaultInstance();
  PBS2CGetPlayerInfoRes::default_instance_->InitAsDefaultInstance();
  PBC2SGetHeroListReq::default_instance_->InitAsDefaultInstance();
  PBHero::default_instance_->InitAsDefaultInstance();
  PBS2CGetHeroListRes::default_instance_->InitAsDefaultInstance();
  PBC2SGetHeroInfoReq::default_instance_->InitAsDefaultInstance();
  PBHeroInfo::default_instance_->InitAsDefaultInstance();
  PBS2CGetHeroInfoRes::default_instance_->InitAsDefaultInstance();
  PBC2SHeroLevelUpReq::default_instance_->InitAsDefaultInstance();
  PBS2CHeroLevelUpRes::default_instance_->InitAsDefaultInstance();
  PBC2SDeleteHeroReq::default_instance_->InitAsDefaultInstance();
  PBS2CDeleteHeroRes::default_instance_->InitAsDefaultInstance();
  PBC2SGetHeroTeamReq::default_instance_->InitAsDefaultInstance();
  PBHeroTeam::default_instance_->InitAsDefaultInstance();
  PBS2CGetHeroTeamRes::default_instance_->InitAsDefaultInstance();
  PBC2SUpdateHeroTeamReq::default_instance_->InitAsDefaultInstance();
  PBS2CUpdateHeroTeamRes::default_instance_->InitAsDefaultInstance();
  PBC2SBuyHeroReq::default_instance_->InitAsDefaultInstance();
  PBS2CBuyHeroRes::default_instance_->InitAsDefaultInstance();
  PBC2SGetPlayerListReq::default_instance_->InitAsDefaultInstance();
  PBPlayer::default_instance_->InitAsDefaultInstance();
  PBS2CGetPlayerListRes::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ClientMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ClientMessage_2eproto {
  StaticDescriptorInitializer_ClientMessage_2eproto() {
    protobuf_AddDesc_ClientMessage_2eproto();
  }
} static_descriptor_initializer_ClientMessage_2eproto_;
const ::google::protobuf::EnumDescriptor* eMessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return eMessageType_descriptor_;
}
bool eMessageType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int PBC2SLoginCheckReq::kUsernameFieldNumber;
const int PBC2SLoginCheckReq::kPasswordFieldNumber;
#endif  // !_MSC_VER

PBC2SLoginCheckReq::PBC2SLoginCheckReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBC2SLoginCheckReq)
}

void PBC2SLoginCheckReq::InitAsDefaultInstance() {
}

PBC2SLoginCheckReq::PBC2SLoginCheckReq(const PBC2SLoginCheckReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBC2SLoginCheckReq)
}

void PBC2SLoginCheckReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2SLoginCheckReq::~PBC2SLoginCheckReq() {
  // @@protoc_insertion_point(destructor:PBC2SLoginCheckReq)
  SharedDtor();
}

void PBC2SLoginCheckReq::SharedDtor() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (this != default_instance_) {
  }
}

void PBC2SLoginCheckReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2SLoginCheckReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2SLoginCheckReq_descriptor_;
}

const PBC2SLoginCheckReq& PBC2SLoginCheckReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBC2SLoginCheckReq* PBC2SLoginCheckReq::default_instance_ = NULL;

PBC2SLoginCheckReq* PBC2SLoginCheckReq::New() const {
  return new PBC2SLoginCheckReq;
}

void PBC2SLoginCheckReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        username_->clear();
      }
    }
    if (has_password()) {
      if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        password_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2SLoginCheckReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBC2SLoginCheckReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Username = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Password;
        break;
      }

      // required string Password = 2;
      case 2: {
        if (tag == 18) {
         parse_Password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBC2SLoginCheckReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBC2SLoginCheckReq)
  return false;
#undef DO_
}

void PBC2SLoginCheckReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBC2SLoginCheckReq)
  // required string Username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required string Password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBC2SLoginCheckReq)
}

::google::protobuf::uint8* PBC2SLoginCheckReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBC2SLoginCheckReq)
  // required string Username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required string Password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBC2SLoginCheckReq)
  return target;
}

int PBC2SLoginCheckReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Username = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // required string Password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2SLoginCheckReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2SLoginCheckReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2SLoginCheckReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2SLoginCheckReq::MergeFrom(const PBC2SLoginCheckReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_username()) {
      set_username(from.username());
    }
    if (from.has_password()) {
      set_password(from.password());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2SLoginCheckReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2SLoginCheckReq::CopyFrom(const PBC2SLoginCheckReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2SLoginCheckReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PBC2SLoginCheckReq::Swap(PBC2SLoginCheckReq* other) {
  if (other != this) {
    std::swap(username_, other->username_);
    std::swap(password_, other->password_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2SLoginCheckReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2SLoginCheckReq_descriptor_;
  metadata.reflection = PBC2SLoginCheckReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBS2CLoginCheckRes::kLoginCheckResultFieldNumber;
#endif  // !_MSC_VER

PBS2CLoginCheckRes::PBS2CLoginCheckRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBS2CLoginCheckRes)
}

void PBS2CLoginCheckRes::InitAsDefaultInstance() {
}

PBS2CLoginCheckRes::PBS2CLoginCheckRes(const PBS2CLoginCheckRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBS2CLoginCheckRes)
}

void PBS2CLoginCheckRes::SharedCtor() {
  _cached_size_ = 0;
  logincheckresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBS2CLoginCheckRes::~PBS2CLoginCheckRes() {
  // @@protoc_insertion_point(destructor:PBS2CLoginCheckRes)
  SharedDtor();
}

void PBS2CLoginCheckRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBS2CLoginCheckRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBS2CLoginCheckRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBS2CLoginCheckRes_descriptor_;
}

const PBS2CLoginCheckRes& PBS2CLoginCheckRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBS2CLoginCheckRes* PBS2CLoginCheckRes::default_instance_ = NULL;

PBS2CLoginCheckRes* PBS2CLoginCheckRes::New() const {
  return new PBS2CLoginCheckRes;
}

void PBS2CLoginCheckRes::Clear() {
  logincheckresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBS2CLoginCheckRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBS2CLoginCheckRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 LoginCheckResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincheckresult_)));
          set_has_logincheckresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBS2CLoginCheckRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBS2CLoginCheckRes)
  return false;
#undef DO_
}

void PBS2CLoginCheckRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBS2CLoginCheckRes)
  // required int32 LoginCheckResult = 1;
  if (has_logincheckresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->logincheckresult(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBS2CLoginCheckRes)
}

::google::protobuf::uint8* PBS2CLoginCheckRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBS2CLoginCheckRes)
  // required int32 LoginCheckResult = 1;
  if (has_logincheckresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->logincheckresult(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBS2CLoginCheckRes)
  return target;
}

int PBS2CLoginCheckRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 LoginCheckResult = 1;
    if (has_logincheckresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->logincheckresult());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBS2CLoginCheckRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBS2CLoginCheckRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBS2CLoginCheckRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBS2CLoginCheckRes::MergeFrom(const PBS2CLoginCheckRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_logincheckresult()) {
      set_logincheckresult(from.logincheckresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBS2CLoginCheckRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBS2CLoginCheckRes::CopyFrom(const PBS2CLoginCheckRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBS2CLoginCheckRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBS2CLoginCheckRes::Swap(PBS2CLoginCheckRes* other) {
  if (other != this) {
    std::swap(logincheckresult_, other->logincheckresult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBS2CLoginCheckRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBS2CLoginCheckRes_descriptor_;
  metadata.reflection = PBS2CLoginCheckRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBC2SLoginRegisterReq::kUsernameFieldNumber;
const int PBC2SLoginRegisterReq::kPasswordFieldNumber;
#endif  // !_MSC_VER

PBC2SLoginRegisterReq::PBC2SLoginRegisterReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBC2SLoginRegisterReq)
}

void PBC2SLoginRegisterReq::InitAsDefaultInstance() {
}

PBC2SLoginRegisterReq::PBC2SLoginRegisterReq(const PBC2SLoginRegisterReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBC2SLoginRegisterReq)
}

void PBC2SLoginRegisterReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2SLoginRegisterReq::~PBC2SLoginRegisterReq() {
  // @@protoc_insertion_point(destructor:PBC2SLoginRegisterReq)
  SharedDtor();
}

void PBC2SLoginRegisterReq::SharedDtor() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (this != default_instance_) {
  }
}

void PBC2SLoginRegisterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2SLoginRegisterReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2SLoginRegisterReq_descriptor_;
}

const PBC2SLoginRegisterReq& PBC2SLoginRegisterReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBC2SLoginRegisterReq* PBC2SLoginRegisterReq::default_instance_ = NULL;

PBC2SLoginRegisterReq* PBC2SLoginRegisterReq::New() const {
  return new PBC2SLoginRegisterReq;
}

void PBC2SLoginRegisterReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        username_->clear();
      }
    }
    if (has_password()) {
      if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        password_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2SLoginRegisterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBC2SLoginRegisterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Username = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Password;
        break;
      }

      // required string Password = 2;
      case 2: {
        if (tag == 18) {
         parse_Password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBC2SLoginRegisterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBC2SLoginRegisterReq)
  return false;
#undef DO_
}

void PBC2SLoginRegisterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBC2SLoginRegisterReq)
  // required string Username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required string Password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBC2SLoginRegisterReq)
}

::google::protobuf::uint8* PBC2SLoginRegisterReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBC2SLoginRegisterReq)
  // required string Username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required string Password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBC2SLoginRegisterReq)
  return target;
}

int PBC2SLoginRegisterReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Username = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // required string Password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2SLoginRegisterReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2SLoginRegisterReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2SLoginRegisterReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2SLoginRegisterReq::MergeFrom(const PBC2SLoginRegisterReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_username()) {
      set_username(from.username());
    }
    if (from.has_password()) {
      set_password(from.password());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2SLoginRegisterReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2SLoginRegisterReq::CopyFrom(const PBC2SLoginRegisterReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2SLoginRegisterReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PBC2SLoginRegisterReq::Swap(PBC2SLoginRegisterReq* other) {
  if (other != this) {
    std::swap(username_, other->username_);
    std::swap(password_, other->password_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2SLoginRegisterReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2SLoginRegisterReq_descriptor_;
  metadata.reflection = PBC2SLoginRegisterReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBS2CLoginRegisterRes::kLoginRegisterResultFieldNumber;
const int PBS2CLoginRegisterRes::kLoginIDFieldNumber;
#endif  // !_MSC_VER

PBS2CLoginRegisterRes::PBS2CLoginRegisterRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBS2CLoginRegisterRes)
}

void PBS2CLoginRegisterRes::InitAsDefaultInstance() {
}

PBS2CLoginRegisterRes::PBS2CLoginRegisterRes(const PBS2CLoginRegisterRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBS2CLoginRegisterRes)
}

void PBS2CLoginRegisterRes::SharedCtor() {
  _cached_size_ = 0;
  loginregisterresult_ = 0;
  loginid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBS2CLoginRegisterRes::~PBS2CLoginRegisterRes() {
  // @@protoc_insertion_point(destructor:PBS2CLoginRegisterRes)
  SharedDtor();
}

void PBS2CLoginRegisterRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBS2CLoginRegisterRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBS2CLoginRegisterRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBS2CLoginRegisterRes_descriptor_;
}

const PBS2CLoginRegisterRes& PBS2CLoginRegisterRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBS2CLoginRegisterRes* PBS2CLoginRegisterRes::default_instance_ = NULL;

PBS2CLoginRegisterRes* PBS2CLoginRegisterRes::New() const {
  return new PBS2CLoginRegisterRes;
}

void PBS2CLoginRegisterRes::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PBS2CLoginRegisterRes*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(loginregisterresult_, loginid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBS2CLoginRegisterRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBS2CLoginRegisterRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 LoginRegisterResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loginregisterresult_)));
          set_has_loginregisterresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_LoginID;
        break;
      }

      // optional int32 LoginID = 2;
      case 2: {
        if (tag == 16) {
         parse_LoginID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loginid_)));
          set_has_loginid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBS2CLoginRegisterRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBS2CLoginRegisterRes)
  return false;
#undef DO_
}

void PBS2CLoginRegisterRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBS2CLoginRegisterRes)
  // required int32 LoginRegisterResult = 1;
  if (has_loginregisterresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->loginregisterresult(), output);
  }

  // optional int32 LoginID = 2;
  if (has_loginid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->loginid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBS2CLoginRegisterRes)
}

::google::protobuf::uint8* PBS2CLoginRegisterRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBS2CLoginRegisterRes)
  // required int32 LoginRegisterResult = 1;
  if (has_loginregisterresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->loginregisterresult(), target);
  }

  // optional int32 LoginID = 2;
  if (has_loginid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->loginid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBS2CLoginRegisterRes)
  return target;
}

int PBS2CLoginRegisterRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 LoginRegisterResult = 1;
    if (has_loginregisterresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->loginregisterresult());
    }

    // optional int32 LoginID = 2;
    if (has_loginid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->loginid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBS2CLoginRegisterRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBS2CLoginRegisterRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBS2CLoginRegisterRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBS2CLoginRegisterRes::MergeFrom(const PBS2CLoginRegisterRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_loginregisterresult()) {
      set_loginregisterresult(from.loginregisterresult());
    }
    if (from.has_loginid()) {
      set_loginid(from.loginid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBS2CLoginRegisterRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBS2CLoginRegisterRes::CopyFrom(const PBS2CLoginRegisterRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBS2CLoginRegisterRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBS2CLoginRegisterRes::Swap(PBS2CLoginRegisterRes* other) {
  if (other != this) {
    std::swap(loginregisterresult_, other->loginregisterresult_);
    std::swap(loginid_, other->loginid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBS2CLoginRegisterRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBS2CLoginRegisterRes_descriptor_;
  metadata.reflection = PBS2CLoginRegisterRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBC2SCreateUserReq::kPlayerNameFieldNumber;
#endif  // !_MSC_VER

PBC2SCreateUserReq::PBC2SCreateUserReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBC2SCreateUserReq)
}

void PBC2SCreateUserReq::InitAsDefaultInstance() {
}

PBC2SCreateUserReq::PBC2SCreateUserReq(const PBC2SCreateUserReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBC2SCreateUserReq)
}

void PBC2SCreateUserReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2SCreateUserReq::~PBC2SCreateUserReq() {
  // @@protoc_insertion_point(destructor:PBC2SCreateUserReq)
  SharedDtor();
}

void PBC2SCreateUserReq::SharedDtor() {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playername_;
  }
  if (this != default_instance_) {
  }
}

void PBC2SCreateUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2SCreateUserReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2SCreateUserReq_descriptor_;
}

const PBC2SCreateUserReq& PBC2SCreateUserReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBC2SCreateUserReq* PBC2SCreateUserReq::default_instance_ = NULL;

PBC2SCreateUserReq* PBC2SCreateUserReq::New() const {
  return new PBC2SCreateUserReq;
}

void PBC2SCreateUserReq::Clear() {
  if (has_playername()) {
    if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      playername_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2SCreateUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBC2SCreateUserReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string PlayerName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playername().data(), this->playername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "playername");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBC2SCreateUserReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBC2SCreateUserReq)
  return false;
#undef DO_
}

void PBC2SCreateUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBC2SCreateUserReq)
  // required string PlayerName = 1;
  if (has_playername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "playername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playername(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBC2SCreateUserReq)
}

::google::protobuf::uint8* PBC2SCreateUserReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBC2SCreateUserReq)
  // required string PlayerName = 1;
  if (has_playername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "playername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playername(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBC2SCreateUserReq)
  return target;
}

int PBC2SCreateUserReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string PlayerName = 1;
    if (has_playername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playername());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2SCreateUserReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2SCreateUserReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2SCreateUserReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2SCreateUserReq::MergeFrom(const PBC2SCreateUserReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_playername()) {
      set_playername(from.playername());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2SCreateUserReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2SCreateUserReq::CopyFrom(const PBC2SCreateUserReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2SCreateUserReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBC2SCreateUserReq::Swap(PBC2SCreateUserReq* other) {
  if (other != this) {
    std::swap(playername_, other->playername_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2SCreateUserReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2SCreateUserReq_descriptor_;
  metadata.reflection = PBC2SCreateUserReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBS2CCreateUserRes::kCreateUserResultFieldNumber;
#endif  // !_MSC_VER

PBS2CCreateUserRes::PBS2CCreateUserRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBS2CCreateUserRes)
}

void PBS2CCreateUserRes::InitAsDefaultInstance() {
}

PBS2CCreateUserRes::PBS2CCreateUserRes(const PBS2CCreateUserRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBS2CCreateUserRes)
}

void PBS2CCreateUserRes::SharedCtor() {
  _cached_size_ = 0;
  createuserresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBS2CCreateUserRes::~PBS2CCreateUserRes() {
  // @@protoc_insertion_point(destructor:PBS2CCreateUserRes)
  SharedDtor();
}

void PBS2CCreateUserRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBS2CCreateUserRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBS2CCreateUserRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBS2CCreateUserRes_descriptor_;
}

const PBS2CCreateUserRes& PBS2CCreateUserRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBS2CCreateUserRes* PBS2CCreateUserRes::default_instance_ = NULL;

PBS2CCreateUserRes* PBS2CCreateUserRes::New() const {
  return new PBS2CCreateUserRes;
}

void PBS2CCreateUserRes::Clear() {
  createuserresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBS2CCreateUserRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBS2CCreateUserRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 CreateUserResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &createuserresult_)));
          set_has_createuserresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBS2CCreateUserRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBS2CCreateUserRes)
  return false;
#undef DO_
}

void PBS2CCreateUserRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBS2CCreateUserRes)
  // required int32 CreateUserResult = 1;
  if (has_createuserresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->createuserresult(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBS2CCreateUserRes)
}

::google::protobuf::uint8* PBS2CCreateUserRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBS2CCreateUserRes)
  // required int32 CreateUserResult = 1;
  if (has_createuserresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->createuserresult(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBS2CCreateUserRes)
  return target;
}

int PBS2CCreateUserRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 CreateUserResult = 1;
    if (has_createuserresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->createuserresult());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBS2CCreateUserRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBS2CCreateUserRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBS2CCreateUserRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBS2CCreateUserRes::MergeFrom(const PBS2CCreateUserRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_createuserresult()) {
      set_createuserresult(from.createuserresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBS2CCreateUserRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBS2CCreateUserRes::CopyFrom(const PBS2CCreateUserRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBS2CCreateUserRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBS2CCreateUserRes::Swap(PBS2CCreateUserRes* other) {
  if (other != this) {
    std::swap(createuserresult_, other->createuserresult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBS2CCreateUserRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBS2CCreateUserRes_descriptor_;
  metadata.reflection = PBS2CCreateUserRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PBC2SDeleteUserReq::PBC2SDeleteUserReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBC2SDeleteUserReq)
}

void PBC2SDeleteUserReq::InitAsDefaultInstance() {
}

PBC2SDeleteUserReq::PBC2SDeleteUserReq(const PBC2SDeleteUserReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBC2SDeleteUserReq)
}

void PBC2SDeleteUserReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2SDeleteUserReq::~PBC2SDeleteUserReq() {
  // @@protoc_insertion_point(destructor:PBC2SDeleteUserReq)
  SharedDtor();
}

void PBC2SDeleteUserReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBC2SDeleteUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2SDeleteUserReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2SDeleteUserReq_descriptor_;
}

const PBC2SDeleteUserReq& PBC2SDeleteUserReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBC2SDeleteUserReq* PBC2SDeleteUserReq::default_instance_ = NULL;

PBC2SDeleteUserReq* PBC2SDeleteUserReq::New() const {
  return new PBC2SDeleteUserReq;
}

void PBC2SDeleteUserReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2SDeleteUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBC2SDeleteUserReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:PBC2SDeleteUserReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBC2SDeleteUserReq)
  return false;
#undef DO_
}

void PBC2SDeleteUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBC2SDeleteUserReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBC2SDeleteUserReq)
}

::google::protobuf::uint8* PBC2SDeleteUserReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBC2SDeleteUserReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBC2SDeleteUserReq)
  return target;
}

int PBC2SDeleteUserReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2SDeleteUserReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2SDeleteUserReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2SDeleteUserReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2SDeleteUserReq::MergeFrom(const PBC2SDeleteUserReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2SDeleteUserReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2SDeleteUserReq::CopyFrom(const PBC2SDeleteUserReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2SDeleteUserReq::IsInitialized() const {

  return true;
}

void PBC2SDeleteUserReq::Swap(PBC2SDeleteUserReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2SDeleteUserReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2SDeleteUserReq_descriptor_;
  metadata.reflection = PBC2SDeleteUserReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBS2CDeleteUserRes::kDeleteUserResultFieldNumber;
#endif  // !_MSC_VER

PBS2CDeleteUserRes::PBS2CDeleteUserRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBS2CDeleteUserRes)
}

void PBS2CDeleteUserRes::InitAsDefaultInstance() {
}

PBS2CDeleteUserRes::PBS2CDeleteUserRes(const PBS2CDeleteUserRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBS2CDeleteUserRes)
}

void PBS2CDeleteUserRes::SharedCtor() {
  _cached_size_ = 0;
  deleteuserresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBS2CDeleteUserRes::~PBS2CDeleteUserRes() {
  // @@protoc_insertion_point(destructor:PBS2CDeleteUserRes)
  SharedDtor();
}

void PBS2CDeleteUserRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBS2CDeleteUserRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBS2CDeleteUserRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBS2CDeleteUserRes_descriptor_;
}

const PBS2CDeleteUserRes& PBS2CDeleteUserRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBS2CDeleteUserRes* PBS2CDeleteUserRes::default_instance_ = NULL;

PBS2CDeleteUserRes* PBS2CDeleteUserRes::New() const {
  return new PBS2CDeleteUserRes;
}

void PBS2CDeleteUserRes::Clear() {
  deleteuserresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBS2CDeleteUserRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBS2CDeleteUserRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 DeleteUserResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deleteuserresult_)));
          set_has_deleteuserresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBS2CDeleteUserRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBS2CDeleteUserRes)
  return false;
#undef DO_
}

void PBS2CDeleteUserRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBS2CDeleteUserRes)
  // required int32 DeleteUserResult = 1;
  if (has_deleteuserresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->deleteuserresult(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBS2CDeleteUserRes)
}

::google::protobuf::uint8* PBS2CDeleteUserRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBS2CDeleteUserRes)
  // required int32 DeleteUserResult = 1;
  if (has_deleteuserresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->deleteuserresult(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBS2CDeleteUserRes)
  return target;
}

int PBS2CDeleteUserRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 DeleteUserResult = 1;
    if (has_deleteuserresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->deleteuserresult());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBS2CDeleteUserRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBS2CDeleteUserRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBS2CDeleteUserRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBS2CDeleteUserRes::MergeFrom(const PBS2CDeleteUserRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_deleteuserresult()) {
      set_deleteuserresult(from.deleteuserresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBS2CDeleteUserRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBS2CDeleteUserRes::CopyFrom(const PBS2CDeleteUserRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBS2CDeleteUserRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBS2CDeleteUserRes::Swap(PBS2CDeleteUserRes* other) {
  if (other != this) {
    std::swap(deleteuserresult_, other->deleteuserresult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBS2CDeleteUserRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBS2CDeleteUserRes_descriptor_;
  metadata.reflection = PBS2CDeleteUserRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PBC2SGetPlayerInfoReq::PBC2SGetPlayerInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBC2SGetPlayerInfoReq)
}

void PBC2SGetPlayerInfoReq::InitAsDefaultInstance() {
}

PBC2SGetPlayerInfoReq::PBC2SGetPlayerInfoReq(const PBC2SGetPlayerInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBC2SGetPlayerInfoReq)
}

void PBC2SGetPlayerInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2SGetPlayerInfoReq::~PBC2SGetPlayerInfoReq() {
  // @@protoc_insertion_point(destructor:PBC2SGetPlayerInfoReq)
  SharedDtor();
}

void PBC2SGetPlayerInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBC2SGetPlayerInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2SGetPlayerInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2SGetPlayerInfoReq_descriptor_;
}

const PBC2SGetPlayerInfoReq& PBC2SGetPlayerInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBC2SGetPlayerInfoReq* PBC2SGetPlayerInfoReq::default_instance_ = NULL;

PBC2SGetPlayerInfoReq* PBC2SGetPlayerInfoReq::New() const {
  return new PBC2SGetPlayerInfoReq;
}

void PBC2SGetPlayerInfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2SGetPlayerInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBC2SGetPlayerInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:PBC2SGetPlayerInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBC2SGetPlayerInfoReq)
  return false;
#undef DO_
}

void PBC2SGetPlayerInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBC2SGetPlayerInfoReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBC2SGetPlayerInfoReq)
}

::google::protobuf::uint8* PBC2SGetPlayerInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBC2SGetPlayerInfoReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBC2SGetPlayerInfoReq)
  return target;
}

int PBC2SGetPlayerInfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2SGetPlayerInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2SGetPlayerInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2SGetPlayerInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2SGetPlayerInfoReq::MergeFrom(const PBC2SGetPlayerInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2SGetPlayerInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2SGetPlayerInfoReq::CopyFrom(const PBC2SGetPlayerInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2SGetPlayerInfoReq::IsInitialized() const {

  return true;
}

void PBC2SGetPlayerInfoReq::Swap(PBC2SGetPlayerInfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2SGetPlayerInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2SGetPlayerInfoReq_descriptor_;
  metadata.reflection = PBC2SGetPlayerInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBPlayerInfo::kPlayerIDFieldNumber;
const int PBPlayerInfo::kUsernameFieldNumber;
const int PBPlayerInfo::kGoldFieldNumber;
const int PBPlayerInfo::kEmpiricalFieldNumber;
#endif  // !_MSC_VER

PBPlayerInfo::PBPlayerInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBPlayerInfo)
}

void PBPlayerInfo::InitAsDefaultInstance() {
}

PBPlayerInfo::PBPlayerInfo(const PBPlayerInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBPlayerInfo)
}

void PBPlayerInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  playerid_ = 0;
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gold_ = 0;
  empirical_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBPlayerInfo::~PBPlayerInfo() {
  // @@protoc_insertion_point(destructor:PBPlayerInfo)
  SharedDtor();
}

void PBPlayerInfo::SharedDtor() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (this != default_instance_) {
  }
}

void PBPlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPlayerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPlayerInfo_descriptor_;
}

const PBPlayerInfo& PBPlayerInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBPlayerInfo* PBPlayerInfo::default_instance_ = NULL;

PBPlayerInfo* PBPlayerInfo::New() const {
  return new PBPlayerInfo;
}

void PBPlayerInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PBPlayerInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(playerid_, empirical_);
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        username_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBPlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 PlayerID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
          set_has_playerid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Username;
        break;
      }

      // optional string Username = 2;
      case 2: {
        if (tag == 18) {
         parse_Username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Gold;
        break;
      }

      // optional int32 Gold = 3;
      case 3: {
        if (tag == 24) {
         parse_Gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Empirical;
        break;
      }

      // optional int32 Empirical = 4;
      case 4: {
        if (tag == 32) {
         parse_Empirical:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &empirical_)));
          set_has_empirical();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBPlayerInfo)
  return false;
#undef DO_
}

void PBPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBPlayerInfo)
  // optional int32 PlayerID = 1;
  if (has_playerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // optional string Username = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional int32 Gold = 3;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gold(), output);
  }

  // optional int32 Empirical = 4;
  if (has_empirical()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->empirical(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBPlayerInfo)
}

::google::protobuf::uint8* PBPlayerInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBPlayerInfo)
  // optional int32 PlayerID = 1;
  if (has_playerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // optional string Username = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional int32 Gold = 3;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gold(), target);
  }

  // optional int32 Empirical = 4;
  if (has_empirical()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->empirical(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBPlayerInfo)
  return target;
}

int PBPlayerInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 PlayerID = 1;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->playerid());
    }

    // optional string Username = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional int32 Gold = 3;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

    // optional int32 Empirical = 4;
    if (has_empirical()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->empirical());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBPlayerInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBPlayerInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBPlayerInfo::MergeFrom(const PBPlayerInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_playerid()) {
      set_playerid(from.playerid());
    }
    if (from.has_username()) {
      set_username(from.username());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_empirical()) {
      set_empirical(from.empirical());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBPlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPlayerInfo::CopyFrom(const PBPlayerInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPlayerInfo::IsInitialized() const {

  return true;
}

void PBPlayerInfo::Swap(PBPlayerInfo* other) {
  if (other != this) {
    std::swap(playerid_, other->playerid_);
    std::swap(username_, other->username_);
    std::swap(gold_, other->gold_);
    std::swap(empirical_, other->empirical_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBPlayerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPlayerInfo_descriptor_;
  metadata.reflection = PBPlayerInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBS2CGetPlayerInfoRes::kGetPlayerInfoResultFieldNumber;
const int PBS2CGetPlayerInfoRes::kPlayerInfoFieldNumber;
#endif  // !_MSC_VER

PBS2CGetPlayerInfoRes::PBS2CGetPlayerInfoRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBS2CGetPlayerInfoRes)
}

void PBS2CGetPlayerInfoRes::InitAsDefaultInstance() {
  playerinfo_ = const_cast< ::PBPlayerInfo*>(&::PBPlayerInfo::default_instance());
}

PBS2CGetPlayerInfoRes::PBS2CGetPlayerInfoRes(const PBS2CGetPlayerInfoRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBS2CGetPlayerInfoRes)
}

void PBS2CGetPlayerInfoRes::SharedCtor() {
  _cached_size_ = 0;
  getplayerinforesult_ = 0;
  playerinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBS2CGetPlayerInfoRes::~PBS2CGetPlayerInfoRes() {
  // @@protoc_insertion_point(destructor:PBS2CGetPlayerInfoRes)
  SharedDtor();
}

void PBS2CGetPlayerInfoRes::SharedDtor() {
  if (this != default_instance_) {
    delete playerinfo_;
  }
}

void PBS2CGetPlayerInfoRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBS2CGetPlayerInfoRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBS2CGetPlayerInfoRes_descriptor_;
}

const PBS2CGetPlayerInfoRes& PBS2CGetPlayerInfoRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBS2CGetPlayerInfoRes* PBS2CGetPlayerInfoRes::default_instance_ = NULL;

PBS2CGetPlayerInfoRes* PBS2CGetPlayerInfoRes::New() const {
  return new PBS2CGetPlayerInfoRes;
}

void PBS2CGetPlayerInfoRes::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    getplayerinforesult_ = 0;
    if (has_playerinfo()) {
      if (playerinfo_ != NULL) playerinfo_->::PBPlayerInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBS2CGetPlayerInfoRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBS2CGetPlayerInfoRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 GetPlayerInfoResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &getplayerinforesult_)));
          set_has_getplayerinforesult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_PlayerInfo;
        break;
      }

      // optional .PBPlayerInfo PlayerInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_PlayerInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_playerinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBS2CGetPlayerInfoRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBS2CGetPlayerInfoRes)
  return false;
#undef DO_
}

void PBS2CGetPlayerInfoRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBS2CGetPlayerInfoRes)
  // required int32 GetPlayerInfoResult = 1;
  if (has_getplayerinforesult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->getplayerinforesult(), output);
  }

  // optional .PBPlayerInfo PlayerInfo = 2;
  if (has_playerinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->playerinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBS2CGetPlayerInfoRes)
}

::google::protobuf::uint8* PBS2CGetPlayerInfoRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBS2CGetPlayerInfoRes)
  // required int32 GetPlayerInfoResult = 1;
  if (has_getplayerinforesult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->getplayerinforesult(), target);
  }

  // optional .PBPlayerInfo PlayerInfo = 2;
  if (has_playerinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->playerinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBS2CGetPlayerInfoRes)
  return target;
}

int PBS2CGetPlayerInfoRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 GetPlayerInfoResult = 1;
    if (has_getplayerinforesult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->getplayerinforesult());
    }

    // optional .PBPlayerInfo PlayerInfo = 2;
    if (has_playerinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->playerinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBS2CGetPlayerInfoRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBS2CGetPlayerInfoRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBS2CGetPlayerInfoRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBS2CGetPlayerInfoRes::MergeFrom(const PBS2CGetPlayerInfoRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_getplayerinforesult()) {
      set_getplayerinforesult(from.getplayerinforesult());
    }
    if (from.has_playerinfo()) {
      mutable_playerinfo()->::PBPlayerInfo::MergeFrom(from.playerinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBS2CGetPlayerInfoRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBS2CGetPlayerInfoRes::CopyFrom(const PBS2CGetPlayerInfoRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBS2CGetPlayerInfoRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBS2CGetPlayerInfoRes::Swap(PBS2CGetPlayerInfoRes* other) {
  if (other != this) {
    std::swap(getplayerinforesult_, other->getplayerinforesult_);
    std::swap(playerinfo_, other->playerinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBS2CGetPlayerInfoRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBS2CGetPlayerInfoRes_descriptor_;
  metadata.reflection = PBS2CGetPlayerInfoRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PBC2SGetHeroListReq::PBC2SGetHeroListReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBC2SGetHeroListReq)
}

void PBC2SGetHeroListReq::InitAsDefaultInstance() {
}

PBC2SGetHeroListReq::PBC2SGetHeroListReq(const PBC2SGetHeroListReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBC2SGetHeroListReq)
}

void PBC2SGetHeroListReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2SGetHeroListReq::~PBC2SGetHeroListReq() {
  // @@protoc_insertion_point(destructor:PBC2SGetHeroListReq)
  SharedDtor();
}

void PBC2SGetHeroListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBC2SGetHeroListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2SGetHeroListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2SGetHeroListReq_descriptor_;
}

const PBC2SGetHeroListReq& PBC2SGetHeroListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBC2SGetHeroListReq* PBC2SGetHeroListReq::default_instance_ = NULL;

PBC2SGetHeroListReq* PBC2SGetHeroListReq::New() const {
  return new PBC2SGetHeroListReq;
}

void PBC2SGetHeroListReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2SGetHeroListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBC2SGetHeroListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:PBC2SGetHeroListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBC2SGetHeroListReq)
  return false;
#undef DO_
}

void PBC2SGetHeroListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBC2SGetHeroListReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBC2SGetHeroListReq)
}

::google::protobuf::uint8* PBC2SGetHeroListReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBC2SGetHeroListReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBC2SGetHeroListReq)
  return target;
}

int PBC2SGetHeroListReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2SGetHeroListReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2SGetHeroListReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2SGetHeroListReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2SGetHeroListReq::MergeFrom(const PBC2SGetHeroListReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2SGetHeroListReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2SGetHeroListReq::CopyFrom(const PBC2SGetHeroListReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2SGetHeroListReq::IsInitialized() const {

  return true;
}

void PBC2SGetHeroListReq::Swap(PBC2SGetHeroListReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2SGetHeroListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2SGetHeroListReq_descriptor_;
  metadata.reflection = PBC2SGetHeroListReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBHero::kHeroInfoIDFieldNumber;
const int PBHero::kHeroIndexFieldNumber;
#endif  // !_MSC_VER

PBHero::PBHero()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBHero)
}

void PBHero::InitAsDefaultInstance() {
}

PBHero::PBHero(const PBHero& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBHero)
}

void PBHero::SharedCtor() {
  _cached_size_ = 0;
  heroinfoid_ = 0;
  heroindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBHero::~PBHero() {
  // @@protoc_insertion_point(destructor:PBHero)
  SharedDtor();
}

void PBHero::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBHero::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBHero::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBHero_descriptor_;
}

const PBHero& PBHero::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBHero* PBHero::default_instance_ = NULL;

PBHero* PBHero::New() const {
  return new PBHero;
}

void PBHero::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PBHero*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(heroinfoid_, heroindex_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBHero::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBHero)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 HeroInfoID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroinfoid_)));
          set_has_heroinfoid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_HeroIndex;
        break;
      }

      // optional int32 HeroIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_HeroIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroindex_)));
          set_has_heroindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBHero)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBHero)
  return false;
#undef DO_
}

void PBHero::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBHero)
  // optional int32 HeroInfoID = 1;
  if (has_heroinfoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->heroinfoid(), output);
  }

  // optional int32 HeroIndex = 2;
  if (has_heroindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->heroindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBHero)
}

::google::protobuf::uint8* PBHero::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBHero)
  // optional int32 HeroInfoID = 1;
  if (has_heroinfoid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->heroinfoid(), target);
  }

  // optional int32 HeroIndex = 2;
  if (has_heroindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->heroindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBHero)
  return target;
}

int PBHero::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 HeroInfoID = 1;
    if (has_heroinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroinfoid());
    }

    // optional int32 HeroIndex = 2;
    if (has_heroindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBHero::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBHero* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBHero*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBHero::MergeFrom(const PBHero& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroinfoid()) {
      set_heroinfoid(from.heroinfoid());
    }
    if (from.has_heroindex()) {
      set_heroindex(from.heroindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBHero::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBHero::CopyFrom(const PBHero& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBHero::IsInitialized() const {

  return true;
}

void PBHero::Swap(PBHero* other) {
  if (other != this) {
    std::swap(heroinfoid_, other->heroinfoid_);
    std::swap(heroindex_, other->heroindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBHero::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBHero_descriptor_;
  metadata.reflection = PBHero_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBS2CGetHeroListRes::kGetHeroListResultFieldNumber;
const int PBS2CGetHeroListRes::kHeroListFieldNumber;
#endif  // !_MSC_VER

PBS2CGetHeroListRes::PBS2CGetHeroListRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBS2CGetHeroListRes)
}

void PBS2CGetHeroListRes::InitAsDefaultInstance() {
}

PBS2CGetHeroListRes::PBS2CGetHeroListRes(const PBS2CGetHeroListRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBS2CGetHeroListRes)
}

void PBS2CGetHeroListRes::SharedCtor() {
  _cached_size_ = 0;
  getherolistresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBS2CGetHeroListRes::~PBS2CGetHeroListRes() {
  // @@protoc_insertion_point(destructor:PBS2CGetHeroListRes)
  SharedDtor();
}

void PBS2CGetHeroListRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBS2CGetHeroListRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBS2CGetHeroListRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBS2CGetHeroListRes_descriptor_;
}

const PBS2CGetHeroListRes& PBS2CGetHeroListRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBS2CGetHeroListRes* PBS2CGetHeroListRes::default_instance_ = NULL;

PBS2CGetHeroListRes* PBS2CGetHeroListRes::New() const {
  return new PBS2CGetHeroListRes;
}

void PBS2CGetHeroListRes::Clear() {
  getherolistresult_ = 0;
  herolist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBS2CGetHeroListRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBS2CGetHeroListRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 GetHeroListResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &getherolistresult_)));
          set_has_getherolistresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_HeroList;
        break;
      }

      // repeated .PBHero HeroList = 2;
      case 2: {
        if (tag == 18) {
         parse_HeroList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_herolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_HeroList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBS2CGetHeroListRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBS2CGetHeroListRes)
  return false;
#undef DO_
}

void PBS2CGetHeroListRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBS2CGetHeroListRes)
  // required int32 GetHeroListResult = 1;
  if (has_getherolistresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->getherolistresult(), output);
  }

  // repeated .PBHero HeroList = 2;
  for (int i = 0; i < this->herolist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->herolist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBS2CGetHeroListRes)
}

::google::protobuf::uint8* PBS2CGetHeroListRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBS2CGetHeroListRes)
  // required int32 GetHeroListResult = 1;
  if (has_getherolistresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->getherolistresult(), target);
  }

  // repeated .PBHero HeroList = 2;
  for (int i = 0; i < this->herolist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->herolist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBS2CGetHeroListRes)
  return target;
}

int PBS2CGetHeroListRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 GetHeroListResult = 1;
    if (has_getherolistresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->getherolistresult());
    }

  }
  // repeated .PBHero HeroList = 2;
  total_size += 1 * this->herolist_size();
  for (int i = 0; i < this->herolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->herolist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBS2CGetHeroListRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBS2CGetHeroListRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBS2CGetHeroListRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBS2CGetHeroListRes::MergeFrom(const PBS2CGetHeroListRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  herolist_.MergeFrom(from.herolist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_getherolistresult()) {
      set_getherolistresult(from.getherolistresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBS2CGetHeroListRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBS2CGetHeroListRes::CopyFrom(const PBS2CGetHeroListRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBS2CGetHeroListRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBS2CGetHeroListRes::Swap(PBS2CGetHeroListRes* other) {
  if (other != this) {
    std::swap(getherolistresult_, other->getherolistresult_);
    herolist_.Swap(&other->herolist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBS2CGetHeroListRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBS2CGetHeroListRes_descriptor_;
  metadata.reflection = PBS2CGetHeroListRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBC2SGetHeroInfoReq::kHeroIndexFieldNumber;
#endif  // !_MSC_VER

PBC2SGetHeroInfoReq::PBC2SGetHeroInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBC2SGetHeroInfoReq)
}

void PBC2SGetHeroInfoReq::InitAsDefaultInstance() {
}

PBC2SGetHeroInfoReq::PBC2SGetHeroInfoReq(const PBC2SGetHeroInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBC2SGetHeroInfoReq)
}

void PBC2SGetHeroInfoReq::SharedCtor() {
  _cached_size_ = 0;
  heroindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2SGetHeroInfoReq::~PBC2SGetHeroInfoReq() {
  // @@protoc_insertion_point(destructor:PBC2SGetHeroInfoReq)
  SharedDtor();
}

void PBC2SGetHeroInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBC2SGetHeroInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2SGetHeroInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2SGetHeroInfoReq_descriptor_;
}

const PBC2SGetHeroInfoReq& PBC2SGetHeroInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBC2SGetHeroInfoReq* PBC2SGetHeroInfoReq::default_instance_ = NULL;

PBC2SGetHeroInfoReq* PBC2SGetHeroInfoReq::New() const {
  return new PBC2SGetHeroInfoReq;
}

void PBC2SGetHeroInfoReq::Clear() {
  heroindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2SGetHeroInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBC2SGetHeroInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 HeroIndex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroindex_)));
          set_has_heroindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBC2SGetHeroInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBC2SGetHeroInfoReq)
  return false;
#undef DO_
}

void PBC2SGetHeroInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBC2SGetHeroInfoReq)
  // required int32 HeroIndex = 1;
  if (has_heroindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->heroindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBC2SGetHeroInfoReq)
}

::google::protobuf::uint8* PBC2SGetHeroInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBC2SGetHeroInfoReq)
  // required int32 HeroIndex = 1;
  if (has_heroindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->heroindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBC2SGetHeroInfoReq)
  return target;
}

int PBC2SGetHeroInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 HeroIndex = 1;
    if (has_heroindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2SGetHeroInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2SGetHeroInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2SGetHeroInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2SGetHeroInfoReq::MergeFrom(const PBC2SGetHeroInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroindex()) {
      set_heroindex(from.heroindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2SGetHeroInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2SGetHeroInfoReq::CopyFrom(const PBC2SGetHeroInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2SGetHeroInfoReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBC2SGetHeroInfoReq::Swap(PBC2SGetHeroInfoReq* other) {
  if (other != this) {
    std::swap(heroindex_, other->heroindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2SGetHeroInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2SGetHeroInfoReq_descriptor_;
  metadata.reflection = PBC2SGetHeroInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBHeroInfo::kHeroFieldNumber;
const int PBHeroInfo::kSpeedFieldNumber;
const int PBHeroInfo::kDefendFieldNumber;
const int PBHeroInfo::kAvoidFieldNumber;
const int PBHeroInfo::kAttachFieldNumber;
const int PBHeroInfo::kHeroSkillIDFieldNumber;
const int PBHeroInfo::kLevelFieldNumber;
#endif  // !_MSC_VER

PBHeroInfo::PBHeroInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBHeroInfo)
}

void PBHeroInfo::InitAsDefaultInstance() {
  hero_ = const_cast< ::PBHero*>(&::PBHero::default_instance());
}

PBHeroInfo::PBHeroInfo(const PBHeroInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBHeroInfo)
}

void PBHeroInfo::SharedCtor() {
  _cached_size_ = 0;
  hero_ = NULL;
  speed_ = 0;
  defend_ = 0;
  avoid_ = 0;
  attach_ = 0;
  heroskillid_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBHeroInfo::~PBHeroInfo() {
  // @@protoc_insertion_point(destructor:PBHeroInfo)
  SharedDtor();
}

void PBHeroInfo::SharedDtor() {
  if (this != default_instance_) {
    delete hero_;
  }
}

void PBHeroInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBHeroInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBHeroInfo_descriptor_;
}

const PBHeroInfo& PBHeroInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBHeroInfo* PBHeroInfo::default_instance_ = NULL;

PBHeroInfo* PBHeroInfo::New() const {
  return new PBHeroInfo;
}

void PBHeroInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PBHeroInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(speed_, level_);
    if (has_hero()) {
      if (hero_ != NULL) hero_->::PBHero::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBHeroInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBHeroInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PBHero Hero = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Speed;
        break;
      }

      // optional int32 Speed = 2;
      case 2: {
        if (tag == 16) {
         parse_Speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
          set_has_speed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Defend;
        break;
      }

      // optional int32 Defend = 3;
      case 3: {
        if (tag == 24) {
         parse_Defend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &defend_)));
          set_has_defend();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Avoid;
        break;
      }

      // optional int32 Avoid = 4;
      case 4: {
        if (tag == 32) {
         parse_Avoid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &avoid_)));
          set_has_avoid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Attach;
        break;
      }

      // optional int32 Attach = 5;
      case 5: {
        if (tag == 40) {
         parse_Attach:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attach_)));
          set_has_attach();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_HeroSkillID;
        break;
      }

      // optional int32 HeroSkillID = 6;
      case 6: {
        if (tag == 48) {
         parse_HeroSkillID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroskillid_)));
          set_has_heroskillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Level;
        break;
      }

      // optional int32 Level = 7;
      case 7: {
        if (tag == 56) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBHeroInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBHeroInfo)
  return false;
#undef DO_
}

void PBHeroInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBHeroInfo)
  // optional .PBHero Hero = 1;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hero(), output);
  }

  // optional int32 Speed = 2;
  if (has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->speed(), output);
  }

  // optional int32 Defend = 3;
  if (has_defend()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->defend(), output);
  }

  // optional int32 Avoid = 4;
  if (has_avoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->avoid(), output);
  }

  // optional int32 Attach = 5;
  if (has_attach()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->attach(), output);
  }

  // optional int32 HeroSkillID = 6;
  if (has_heroskillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->heroskillid(), output);
  }

  // optional int32 Level = 7;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBHeroInfo)
}

::google::protobuf::uint8* PBHeroInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBHeroInfo)
  // optional .PBHero Hero = 1;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hero(), target);
  }

  // optional int32 Speed = 2;
  if (has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->speed(), target);
  }

  // optional int32 Defend = 3;
  if (has_defend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->defend(), target);
  }

  // optional int32 Avoid = 4;
  if (has_avoid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->avoid(), target);
  }

  // optional int32 Attach = 5;
  if (has_attach()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->attach(), target);
  }

  // optional int32 HeroSkillID = 6;
  if (has_heroskillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->heroskillid(), target);
  }

  // optional int32 Level = 7;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBHeroInfo)
  return target;
}

int PBHeroInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PBHero Hero = 1;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

    // optional int32 Speed = 2;
    if (has_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->speed());
    }

    // optional int32 Defend = 3;
    if (has_defend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->defend());
    }

    // optional int32 Avoid = 4;
    if (has_avoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->avoid());
    }

    // optional int32 Attach = 5;
    if (has_attach()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attach());
    }

    // optional int32 HeroSkillID = 6;
    if (has_heroskillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroskillid());
    }

    // optional int32 Level = 7;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBHeroInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBHeroInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBHeroInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBHeroInfo::MergeFrom(const PBHeroInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hero()) {
      mutable_hero()->::PBHero::MergeFrom(from.hero());
    }
    if (from.has_speed()) {
      set_speed(from.speed());
    }
    if (from.has_defend()) {
      set_defend(from.defend());
    }
    if (from.has_avoid()) {
      set_avoid(from.avoid());
    }
    if (from.has_attach()) {
      set_attach(from.attach());
    }
    if (from.has_heroskillid()) {
      set_heroskillid(from.heroskillid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBHeroInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBHeroInfo::CopyFrom(const PBHeroInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBHeroInfo::IsInitialized() const {

  return true;
}

void PBHeroInfo::Swap(PBHeroInfo* other) {
  if (other != this) {
    std::swap(hero_, other->hero_);
    std::swap(speed_, other->speed_);
    std::swap(defend_, other->defend_);
    std::swap(avoid_, other->avoid_);
    std::swap(attach_, other->attach_);
    std::swap(heroskillid_, other->heroskillid_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBHeroInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBHeroInfo_descriptor_;
  metadata.reflection = PBHeroInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBS2CGetHeroInfoRes::kGetHeroInfoResultFieldNumber;
const int PBS2CGetHeroInfoRes::kHeroInfoFieldNumber;
#endif  // !_MSC_VER

PBS2CGetHeroInfoRes::PBS2CGetHeroInfoRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBS2CGetHeroInfoRes)
}

void PBS2CGetHeroInfoRes::InitAsDefaultInstance() {
  heroinfo_ = const_cast< ::PBHeroInfo*>(&::PBHeroInfo::default_instance());
}

PBS2CGetHeroInfoRes::PBS2CGetHeroInfoRes(const PBS2CGetHeroInfoRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBS2CGetHeroInfoRes)
}

void PBS2CGetHeroInfoRes::SharedCtor() {
  _cached_size_ = 0;
  getheroinforesult_ = 0;
  heroinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBS2CGetHeroInfoRes::~PBS2CGetHeroInfoRes() {
  // @@protoc_insertion_point(destructor:PBS2CGetHeroInfoRes)
  SharedDtor();
}

void PBS2CGetHeroInfoRes::SharedDtor() {
  if (this != default_instance_) {
    delete heroinfo_;
  }
}

void PBS2CGetHeroInfoRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBS2CGetHeroInfoRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBS2CGetHeroInfoRes_descriptor_;
}

const PBS2CGetHeroInfoRes& PBS2CGetHeroInfoRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBS2CGetHeroInfoRes* PBS2CGetHeroInfoRes::default_instance_ = NULL;

PBS2CGetHeroInfoRes* PBS2CGetHeroInfoRes::New() const {
  return new PBS2CGetHeroInfoRes;
}

void PBS2CGetHeroInfoRes::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    getheroinforesult_ = 0;
    if (has_heroinfo()) {
      if (heroinfo_ != NULL) heroinfo_->::PBHeroInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBS2CGetHeroInfoRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBS2CGetHeroInfoRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 GetHeroInfoResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &getheroinforesult_)));
          set_has_getheroinforesult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_HeroInfo;
        break;
      }

      // optional .PBHeroInfo HeroInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_HeroInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heroinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBS2CGetHeroInfoRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBS2CGetHeroInfoRes)
  return false;
#undef DO_
}

void PBS2CGetHeroInfoRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBS2CGetHeroInfoRes)
  // required int32 GetHeroInfoResult = 1;
  if (has_getheroinforesult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->getheroinforesult(), output);
  }

  // optional .PBHeroInfo HeroInfo = 2;
  if (has_heroinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->heroinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBS2CGetHeroInfoRes)
}

::google::protobuf::uint8* PBS2CGetHeroInfoRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBS2CGetHeroInfoRes)
  // required int32 GetHeroInfoResult = 1;
  if (has_getheroinforesult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->getheroinforesult(), target);
  }

  // optional .PBHeroInfo HeroInfo = 2;
  if (has_heroinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->heroinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBS2CGetHeroInfoRes)
  return target;
}

int PBS2CGetHeroInfoRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 GetHeroInfoResult = 1;
    if (has_getheroinforesult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->getheroinforesult());
    }

    // optional .PBHeroInfo HeroInfo = 2;
    if (has_heroinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->heroinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBS2CGetHeroInfoRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBS2CGetHeroInfoRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBS2CGetHeroInfoRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBS2CGetHeroInfoRes::MergeFrom(const PBS2CGetHeroInfoRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_getheroinforesult()) {
      set_getheroinforesult(from.getheroinforesult());
    }
    if (from.has_heroinfo()) {
      mutable_heroinfo()->::PBHeroInfo::MergeFrom(from.heroinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBS2CGetHeroInfoRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBS2CGetHeroInfoRes::CopyFrom(const PBS2CGetHeroInfoRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBS2CGetHeroInfoRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBS2CGetHeroInfoRes::Swap(PBS2CGetHeroInfoRes* other) {
  if (other != this) {
    std::swap(getheroinforesult_, other->getheroinforesult_);
    std::swap(heroinfo_, other->heroinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBS2CGetHeroInfoRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBS2CGetHeroInfoRes_descriptor_;
  metadata.reflection = PBS2CGetHeroInfoRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBC2SHeroLevelUpReq::kHeroIndexFieldNumber;
#endif  // !_MSC_VER

PBC2SHeroLevelUpReq::PBC2SHeroLevelUpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBC2SHeroLevelUpReq)
}

void PBC2SHeroLevelUpReq::InitAsDefaultInstance() {
}

PBC2SHeroLevelUpReq::PBC2SHeroLevelUpReq(const PBC2SHeroLevelUpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBC2SHeroLevelUpReq)
}

void PBC2SHeroLevelUpReq::SharedCtor() {
  _cached_size_ = 0;
  heroindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2SHeroLevelUpReq::~PBC2SHeroLevelUpReq() {
  // @@protoc_insertion_point(destructor:PBC2SHeroLevelUpReq)
  SharedDtor();
}

void PBC2SHeroLevelUpReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBC2SHeroLevelUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2SHeroLevelUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2SHeroLevelUpReq_descriptor_;
}

const PBC2SHeroLevelUpReq& PBC2SHeroLevelUpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBC2SHeroLevelUpReq* PBC2SHeroLevelUpReq::default_instance_ = NULL;

PBC2SHeroLevelUpReq* PBC2SHeroLevelUpReq::New() const {
  return new PBC2SHeroLevelUpReq;
}

void PBC2SHeroLevelUpReq::Clear() {
  heroindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2SHeroLevelUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBC2SHeroLevelUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 HeroIndex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroindex_)));
          set_has_heroindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBC2SHeroLevelUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBC2SHeroLevelUpReq)
  return false;
#undef DO_
}

void PBC2SHeroLevelUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBC2SHeroLevelUpReq)
  // required int32 HeroIndex = 1;
  if (has_heroindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->heroindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBC2SHeroLevelUpReq)
}

::google::protobuf::uint8* PBC2SHeroLevelUpReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBC2SHeroLevelUpReq)
  // required int32 HeroIndex = 1;
  if (has_heroindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->heroindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBC2SHeroLevelUpReq)
  return target;
}

int PBC2SHeroLevelUpReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 HeroIndex = 1;
    if (has_heroindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2SHeroLevelUpReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2SHeroLevelUpReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2SHeroLevelUpReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2SHeroLevelUpReq::MergeFrom(const PBC2SHeroLevelUpReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroindex()) {
      set_heroindex(from.heroindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2SHeroLevelUpReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2SHeroLevelUpReq::CopyFrom(const PBC2SHeroLevelUpReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2SHeroLevelUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBC2SHeroLevelUpReq::Swap(PBC2SHeroLevelUpReq* other) {
  if (other != this) {
    std::swap(heroindex_, other->heroindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2SHeroLevelUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2SHeroLevelUpReq_descriptor_;
  metadata.reflection = PBC2SHeroLevelUpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBS2CHeroLevelUpRes::kHeroLevelUpResultFieldNumber;
#endif  // !_MSC_VER

PBS2CHeroLevelUpRes::PBS2CHeroLevelUpRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBS2CHeroLevelUpRes)
}

void PBS2CHeroLevelUpRes::InitAsDefaultInstance() {
}

PBS2CHeroLevelUpRes::PBS2CHeroLevelUpRes(const PBS2CHeroLevelUpRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBS2CHeroLevelUpRes)
}

void PBS2CHeroLevelUpRes::SharedCtor() {
  _cached_size_ = 0;
  herolevelupresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBS2CHeroLevelUpRes::~PBS2CHeroLevelUpRes() {
  // @@protoc_insertion_point(destructor:PBS2CHeroLevelUpRes)
  SharedDtor();
}

void PBS2CHeroLevelUpRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBS2CHeroLevelUpRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBS2CHeroLevelUpRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBS2CHeroLevelUpRes_descriptor_;
}

const PBS2CHeroLevelUpRes& PBS2CHeroLevelUpRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBS2CHeroLevelUpRes* PBS2CHeroLevelUpRes::default_instance_ = NULL;

PBS2CHeroLevelUpRes* PBS2CHeroLevelUpRes::New() const {
  return new PBS2CHeroLevelUpRes;
}

void PBS2CHeroLevelUpRes::Clear() {
  herolevelupresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBS2CHeroLevelUpRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBS2CHeroLevelUpRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 HeroLevelUpResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &herolevelupresult_)));
          set_has_herolevelupresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBS2CHeroLevelUpRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBS2CHeroLevelUpRes)
  return false;
#undef DO_
}

void PBS2CHeroLevelUpRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBS2CHeroLevelUpRes)
  // required int32 HeroLevelUpResult = 1;
  if (has_herolevelupresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->herolevelupresult(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBS2CHeroLevelUpRes)
}

::google::protobuf::uint8* PBS2CHeroLevelUpRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBS2CHeroLevelUpRes)
  // required int32 HeroLevelUpResult = 1;
  if (has_herolevelupresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->herolevelupresult(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBS2CHeroLevelUpRes)
  return target;
}

int PBS2CHeroLevelUpRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 HeroLevelUpResult = 1;
    if (has_herolevelupresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->herolevelupresult());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBS2CHeroLevelUpRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBS2CHeroLevelUpRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBS2CHeroLevelUpRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBS2CHeroLevelUpRes::MergeFrom(const PBS2CHeroLevelUpRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_herolevelupresult()) {
      set_herolevelupresult(from.herolevelupresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBS2CHeroLevelUpRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBS2CHeroLevelUpRes::CopyFrom(const PBS2CHeroLevelUpRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBS2CHeroLevelUpRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBS2CHeroLevelUpRes::Swap(PBS2CHeroLevelUpRes* other) {
  if (other != this) {
    std::swap(herolevelupresult_, other->herolevelupresult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBS2CHeroLevelUpRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBS2CHeroLevelUpRes_descriptor_;
  metadata.reflection = PBS2CHeroLevelUpRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBC2SDeleteHeroReq::kHeroIndexFieldNumber;
#endif  // !_MSC_VER

PBC2SDeleteHeroReq::PBC2SDeleteHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBC2SDeleteHeroReq)
}

void PBC2SDeleteHeroReq::InitAsDefaultInstance() {
}

PBC2SDeleteHeroReq::PBC2SDeleteHeroReq(const PBC2SDeleteHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBC2SDeleteHeroReq)
}

void PBC2SDeleteHeroReq::SharedCtor() {
  _cached_size_ = 0;
  heroindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2SDeleteHeroReq::~PBC2SDeleteHeroReq() {
  // @@protoc_insertion_point(destructor:PBC2SDeleteHeroReq)
  SharedDtor();
}

void PBC2SDeleteHeroReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBC2SDeleteHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2SDeleteHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2SDeleteHeroReq_descriptor_;
}

const PBC2SDeleteHeroReq& PBC2SDeleteHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBC2SDeleteHeroReq* PBC2SDeleteHeroReq::default_instance_ = NULL;

PBC2SDeleteHeroReq* PBC2SDeleteHeroReq::New() const {
  return new PBC2SDeleteHeroReq;
}

void PBC2SDeleteHeroReq::Clear() {
  heroindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2SDeleteHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBC2SDeleteHeroReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 HeroIndex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroindex_)));
          set_has_heroindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBC2SDeleteHeroReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBC2SDeleteHeroReq)
  return false;
#undef DO_
}

void PBC2SDeleteHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBC2SDeleteHeroReq)
  // required int32 HeroIndex = 1;
  if (has_heroindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->heroindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBC2SDeleteHeroReq)
}

::google::protobuf::uint8* PBC2SDeleteHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBC2SDeleteHeroReq)
  // required int32 HeroIndex = 1;
  if (has_heroindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->heroindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBC2SDeleteHeroReq)
  return target;
}

int PBC2SDeleteHeroReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 HeroIndex = 1;
    if (has_heroindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2SDeleteHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2SDeleteHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2SDeleteHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2SDeleteHeroReq::MergeFrom(const PBC2SDeleteHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroindex()) {
      set_heroindex(from.heroindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2SDeleteHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2SDeleteHeroReq::CopyFrom(const PBC2SDeleteHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2SDeleteHeroReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBC2SDeleteHeroReq::Swap(PBC2SDeleteHeroReq* other) {
  if (other != this) {
    std::swap(heroindex_, other->heroindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2SDeleteHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2SDeleteHeroReq_descriptor_;
  metadata.reflection = PBC2SDeleteHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBS2CDeleteHeroRes::kDeleteHeroResultFieldNumber;
#endif  // !_MSC_VER

PBS2CDeleteHeroRes::PBS2CDeleteHeroRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBS2CDeleteHeroRes)
}

void PBS2CDeleteHeroRes::InitAsDefaultInstance() {
}

PBS2CDeleteHeroRes::PBS2CDeleteHeroRes(const PBS2CDeleteHeroRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBS2CDeleteHeroRes)
}

void PBS2CDeleteHeroRes::SharedCtor() {
  _cached_size_ = 0;
  deleteheroresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBS2CDeleteHeroRes::~PBS2CDeleteHeroRes() {
  // @@protoc_insertion_point(destructor:PBS2CDeleteHeroRes)
  SharedDtor();
}

void PBS2CDeleteHeroRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBS2CDeleteHeroRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBS2CDeleteHeroRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBS2CDeleteHeroRes_descriptor_;
}

const PBS2CDeleteHeroRes& PBS2CDeleteHeroRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBS2CDeleteHeroRes* PBS2CDeleteHeroRes::default_instance_ = NULL;

PBS2CDeleteHeroRes* PBS2CDeleteHeroRes::New() const {
  return new PBS2CDeleteHeroRes;
}

void PBS2CDeleteHeroRes::Clear() {
  deleteheroresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBS2CDeleteHeroRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBS2CDeleteHeroRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 DeleteHeroResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deleteheroresult_)));
          set_has_deleteheroresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBS2CDeleteHeroRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBS2CDeleteHeroRes)
  return false;
#undef DO_
}

void PBS2CDeleteHeroRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBS2CDeleteHeroRes)
  // required int32 DeleteHeroResult = 1;
  if (has_deleteheroresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->deleteheroresult(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBS2CDeleteHeroRes)
}

::google::protobuf::uint8* PBS2CDeleteHeroRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBS2CDeleteHeroRes)
  // required int32 DeleteHeroResult = 1;
  if (has_deleteheroresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->deleteheroresult(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBS2CDeleteHeroRes)
  return target;
}

int PBS2CDeleteHeroRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 DeleteHeroResult = 1;
    if (has_deleteheroresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->deleteheroresult());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBS2CDeleteHeroRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBS2CDeleteHeroRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBS2CDeleteHeroRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBS2CDeleteHeroRes::MergeFrom(const PBS2CDeleteHeroRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_deleteheroresult()) {
      set_deleteheroresult(from.deleteheroresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBS2CDeleteHeroRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBS2CDeleteHeroRes::CopyFrom(const PBS2CDeleteHeroRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBS2CDeleteHeroRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBS2CDeleteHeroRes::Swap(PBS2CDeleteHeroRes* other) {
  if (other != this) {
    std::swap(deleteheroresult_, other->deleteheroresult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBS2CDeleteHeroRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBS2CDeleteHeroRes_descriptor_;
  metadata.reflection = PBS2CDeleteHeroRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PBC2SGetHeroTeamReq::PBC2SGetHeroTeamReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBC2SGetHeroTeamReq)
}

void PBC2SGetHeroTeamReq::InitAsDefaultInstance() {
}

PBC2SGetHeroTeamReq::PBC2SGetHeroTeamReq(const PBC2SGetHeroTeamReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBC2SGetHeroTeamReq)
}

void PBC2SGetHeroTeamReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2SGetHeroTeamReq::~PBC2SGetHeroTeamReq() {
  // @@protoc_insertion_point(destructor:PBC2SGetHeroTeamReq)
  SharedDtor();
}

void PBC2SGetHeroTeamReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBC2SGetHeroTeamReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2SGetHeroTeamReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2SGetHeroTeamReq_descriptor_;
}

const PBC2SGetHeroTeamReq& PBC2SGetHeroTeamReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBC2SGetHeroTeamReq* PBC2SGetHeroTeamReq::default_instance_ = NULL;

PBC2SGetHeroTeamReq* PBC2SGetHeroTeamReq::New() const {
  return new PBC2SGetHeroTeamReq;
}

void PBC2SGetHeroTeamReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2SGetHeroTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBC2SGetHeroTeamReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:PBC2SGetHeroTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBC2SGetHeroTeamReq)
  return false;
#undef DO_
}

void PBC2SGetHeroTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBC2SGetHeroTeamReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBC2SGetHeroTeamReq)
}

::google::protobuf::uint8* PBC2SGetHeroTeamReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBC2SGetHeroTeamReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBC2SGetHeroTeamReq)
  return target;
}

int PBC2SGetHeroTeamReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2SGetHeroTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2SGetHeroTeamReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2SGetHeroTeamReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2SGetHeroTeamReq::MergeFrom(const PBC2SGetHeroTeamReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2SGetHeroTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2SGetHeroTeamReq::CopyFrom(const PBC2SGetHeroTeamReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2SGetHeroTeamReq::IsInitialized() const {

  return true;
}

void PBC2SGetHeroTeamReq::Swap(PBC2SGetHeroTeamReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2SGetHeroTeamReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2SGetHeroTeamReq_descriptor_;
  metadata.reflection = PBC2SGetHeroTeamReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBHeroTeam::kHealthPointFieldNumber;
const int PBHeroTeam::kSpeedFieldNumber;
const int PBHeroTeam::kDefendFieldNumber;
const int PBHeroTeam::kAvoidFieldNumber;
const int PBHeroTeam::kAttachFieldNumber;
const int PBHeroTeam::kHeroInfoIDFieldNumber;
#endif  // !_MSC_VER

PBHeroTeam::PBHeroTeam()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBHeroTeam)
}

void PBHeroTeam::InitAsDefaultInstance() {
}

PBHeroTeam::PBHeroTeam(const PBHeroTeam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBHeroTeam)
}

void PBHeroTeam::SharedCtor() {
  _cached_size_ = 0;
  healthpoint_ = 0;
  speed_ = 0;
  defend_ = 0;
  avoid_ = 0;
  attach_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBHeroTeam::~PBHeroTeam() {
  // @@protoc_insertion_point(destructor:PBHeroTeam)
  SharedDtor();
}

void PBHeroTeam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBHeroTeam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBHeroTeam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBHeroTeam_descriptor_;
}

const PBHeroTeam& PBHeroTeam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBHeroTeam* PBHeroTeam::default_instance_ = NULL;

PBHeroTeam* PBHeroTeam::New() const {
  return new PBHeroTeam;
}

void PBHeroTeam::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PBHeroTeam*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(healthpoint_, avoid_);
    attach_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  heroinfoid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBHeroTeam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBHeroTeam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 HealthPoint = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &healthpoint_)));
          set_has_healthpoint();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Speed;
        break;
      }

      // optional int32 Speed = 2;
      case 2: {
        if (tag == 16) {
         parse_Speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
          set_has_speed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Defend;
        break;
      }

      // optional int32 Defend = 3;
      case 3: {
        if (tag == 24) {
         parse_Defend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &defend_)));
          set_has_defend();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Avoid;
        break;
      }

      // optional int32 Avoid = 4;
      case 4: {
        if (tag == 32) {
         parse_Avoid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &avoid_)));
          set_has_avoid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Attach;
        break;
      }

      // optional int32 Attach = 5;
      case 5: {
        if (tag == 40) {
         parse_Attach:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attach_)));
          set_has_attach();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_HeroInfoID;
        break;
      }

      // repeated int32 HeroInfoID = 6;
      case 6: {
        if (tag == 48) {
         parse_HeroInfoID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_heroinfoid())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_heroinfoid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_HeroInfoID;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBHeroTeam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBHeroTeam)
  return false;
#undef DO_
}

void PBHeroTeam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBHeroTeam)
  // optional int32 HealthPoint = 1;
  if (has_healthpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->healthpoint(), output);
  }

  // optional int32 Speed = 2;
  if (has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->speed(), output);
  }

  // optional int32 Defend = 3;
  if (has_defend()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->defend(), output);
  }

  // optional int32 Avoid = 4;
  if (has_avoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->avoid(), output);
  }

  // optional int32 Attach = 5;
  if (has_attach()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->attach(), output);
  }

  // repeated int32 HeroInfoID = 6;
  for (int i = 0; i < this->heroinfoid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->heroinfoid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBHeroTeam)
}

::google::protobuf::uint8* PBHeroTeam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBHeroTeam)
  // optional int32 HealthPoint = 1;
  if (has_healthpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->healthpoint(), target);
  }

  // optional int32 Speed = 2;
  if (has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->speed(), target);
  }

  // optional int32 Defend = 3;
  if (has_defend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->defend(), target);
  }

  // optional int32 Avoid = 4;
  if (has_avoid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->avoid(), target);
  }

  // optional int32 Attach = 5;
  if (has_attach()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->attach(), target);
  }

  // repeated int32 HeroInfoID = 6;
  for (int i = 0; i < this->heroinfoid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->heroinfoid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBHeroTeam)
  return target;
}

int PBHeroTeam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 HealthPoint = 1;
    if (has_healthpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->healthpoint());
    }

    // optional int32 Speed = 2;
    if (has_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->speed());
    }

    // optional int32 Defend = 3;
    if (has_defend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->defend());
    }

    // optional int32 Avoid = 4;
    if (has_avoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->avoid());
    }

    // optional int32 Attach = 5;
    if (has_attach()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attach());
    }

  }
  // repeated int32 HeroInfoID = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->heroinfoid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->heroinfoid(i));
    }
    total_size += 1 * this->heroinfoid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBHeroTeam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBHeroTeam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBHeroTeam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBHeroTeam::MergeFrom(const PBHeroTeam& from) {
  GOOGLE_CHECK_NE(&from, this);
  heroinfoid_.MergeFrom(from.heroinfoid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_healthpoint()) {
      set_healthpoint(from.healthpoint());
    }
    if (from.has_speed()) {
      set_speed(from.speed());
    }
    if (from.has_defend()) {
      set_defend(from.defend());
    }
    if (from.has_avoid()) {
      set_avoid(from.avoid());
    }
    if (from.has_attach()) {
      set_attach(from.attach());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBHeroTeam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBHeroTeam::CopyFrom(const PBHeroTeam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBHeroTeam::IsInitialized() const {

  return true;
}

void PBHeroTeam::Swap(PBHeroTeam* other) {
  if (other != this) {
    std::swap(healthpoint_, other->healthpoint_);
    std::swap(speed_, other->speed_);
    std::swap(defend_, other->defend_);
    std::swap(avoid_, other->avoid_);
    std::swap(attach_, other->attach_);
    heroinfoid_.Swap(&other->heroinfoid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBHeroTeam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBHeroTeam_descriptor_;
  metadata.reflection = PBHeroTeam_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBS2CGetHeroTeamRes::kGetHeroTeamResultFieldNumber;
const int PBS2CGetHeroTeamRes::kHeroTeamFieldNumber;
#endif  // !_MSC_VER

PBS2CGetHeroTeamRes::PBS2CGetHeroTeamRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBS2CGetHeroTeamRes)
}

void PBS2CGetHeroTeamRes::InitAsDefaultInstance() {
  heroteam_ = const_cast< ::PBHeroTeam*>(&::PBHeroTeam::default_instance());
}

PBS2CGetHeroTeamRes::PBS2CGetHeroTeamRes(const PBS2CGetHeroTeamRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBS2CGetHeroTeamRes)
}

void PBS2CGetHeroTeamRes::SharedCtor() {
  _cached_size_ = 0;
  getheroteamresult_ = 0;
  heroteam_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBS2CGetHeroTeamRes::~PBS2CGetHeroTeamRes() {
  // @@protoc_insertion_point(destructor:PBS2CGetHeroTeamRes)
  SharedDtor();
}

void PBS2CGetHeroTeamRes::SharedDtor() {
  if (this != default_instance_) {
    delete heroteam_;
  }
}

void PBS2CGetHeroTeamRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBS2CGetHeroTeamRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBS2CGetHeroTeamRes_descriptor_;
}

const PBS2CGetHeroTeamRes& PBS2CGetHeroTeamRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBS2CGetHeroTeamRes* PBS2CGetHeroTeamRes::default_instance_ = NULL;

PBS2CGetHeroTeamRes* PBS2CGetHeroTeamRes::New() const {
  return new PBS2CGetHeroTeamRes;
}

void PBS2CGetHeroTeamRes::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    getheroteamresult_ = 0;
    if (has_heroteam()) {
      if (heroteam_ != NULL) heroteam_->::PBHeroTeam::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBS2CGetHeroTeamRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBS2CGetHeroTeamRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 GetHeroTeamResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &getheroteamresult_)));
          set_has_getheroteamresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_HeroTeam;
        break;
      }

      // optional .PBHeroTeam HeroTeam = 2;
      case 2: {
        if (tag == 18) {
         parse_HeroTeam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heroteam()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBS2CGetHeroTeamRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBS2CGetHeroTeamRes)
  return false;
#undef DO_
}

void PBS2CGetHeroTeamRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBS2CGetHeroTeamRes)
  // required int32 GetHeroTeamResult = 1;
  if (has_getheroteamresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->getheroteamresult(), output);
  }

  // optional .PBHeroTeam HeroTeam = 2;
  if (has_heroteam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->heroteam(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBS2CGetHeroTeamRes)
}

::google::protobuf::uint8* PBS2CGetHeroTeamRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBS2CGetHeroTeamRes)
  // required int32 GetHeroTeamResult = 1;
  if (has_getheroteamresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->getheroteamresult(), target);
  }

  // optional .PBHeroTeam HeroTeam = 2;
  if (has_heroteam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->heroteam(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBS2CGetHeroTeamRes)
  return target;
}

int PBS2CGetHeroTeamRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 GetHeroTeamResult = 1;
    if (has_getheroteamresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->getheroteamresult());
    }

    // optional .PBHeroTeam HeroTeam = 2;
    if (has_heroteam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->heroteam());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBS2CGetHeroTeamRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBS2CGetHeroTeamRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBS2CGetHeroTeamRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBS2CGetHeroTeamRes::MergeFrom(const PBS2CGetHeroTeamRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_getheroteamresult()) {
      set_getheroteamresult(from.getheroteamresult());
    }
    if (from.has_heroteam()) {
      mutable_heroteam()->::PBHeroTeam::MergeFrom(from.heroteam());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBS2CGetHeroTeamRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBS2CGetHeroTeamRes::CopyFrom(const PBS2CGetHeroTeamRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBS2CGetHeroTeamRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBS2CGetHeroTeamRes::Swap(PBS2CGetHeroTeamRes* other) {
  if (other != this) {
    std::swap(getheroteamresult_, other->getheroteamresult_);
    std::swap(heroteam_, other->heroteam_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBS2CGetHeroTeamRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBS2CGetHeroTeamRes_descriptor_;
  metadata.reflection = PBS2CGetHeroTeamRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBC2SUpdateHeroTeamReq::kHeroIndexFieldNumber;
#endif  // !_MSC_VER

PBC2SUpdateHeroTeamReq::PBC2SUpdateHeroTeamReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBC2SUpdateHeroTeamReq)
}

void PBC2SUpdateHeroTeamReq::InitAsDefaultInstance() {
}

PBC2SUpdateHeroTeamReq::PBC2SUpdateHeroTeamReq(const PBC2SUpdateHeroTeamReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBC2SUpdateHeroTeamReq)
}

void PBC2SUpdateHeroTeamReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2SUpdateHeroTeamReq::~PBC2SUpdateHeroTeamReq() {
  // @@protoc_insertion_point(destructor:PBC2SUpdateHeroTeamReq)
  SharedDtor();
}

void PBC2SUpdateHeroTeamReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBC2SUpdateHeroTeamReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2SUpdateHeroTeamReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2SUpdateHeroTeamReq_descriptor_;
}

const PBC2SUpdateHeroTeamReq& PBC2SUpdateHeroTeamReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBC2SUpdateHeroTeamReq* PBC2SUpdateHeroTeamReq::default_instance_ = NULL;

PBC2SUpdateHeroTeamReq* PBC2SUpdateHeroTeamReq::New() const {
  return new PBC2SUpdateHeroTeamReq;
}

void PBC2SUpdateHeroTeamReq::Clear() {
  heroindex_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2SUpdateHeroTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBC2SUpdateHeroTeamReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 HeroIndex = 1;
      case 1: {
        if (tag == 8) {
         parse_HeroIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_heroindex())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_heroindex())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_HeroIndex;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBC2SUpdateHeroTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBC2SUpdateHeroTeamReq)
  return false;
#undef DO_
}

void PBC2SUpdateHeroTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBC2SUpdateHeroTeamReq)
  // repeated int32 HeroIndex = 1;
  for (int i = 0; i < this->heroindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->heroindex(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBC2SUpdateHeroTeamReq)
}

::google::protobuf::uint8* PBC2SUpdateHeroTeamReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBC2SUpdateHeroTeamReq)
  // repeated int32 HeroIndex = 1;
  for (int i = 0; i < this->heroindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->heroindex(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBC2SUpdateHeroTeamReq)
  return target;
}

int PBC2SUpdateHeroTeamReq::ByteSize() const {
  int total_size = 0;

  // repeated int32 HeroIndex = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->heroindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->heroindex(i));
    }
    total_size += 1 * this->heroindex_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2SUpdateHeroTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2SUpdateHeroTeamReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2SUpdateHeroTeamReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2SUpdateHeroTeamReq::MergeFrom(const PBC2SUpdateHeroTeamReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  heroindex_.MergeFrom(from.heroindex_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2SUpdateHeroTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2SUpdateHeroTeamReq::CopyFrom(const PBC2SUpdateHeroTeamReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2SUpdateHeroTeamReq::IsInitialized() const {

  return true;
}

void PBC2SUpdateHeroTeamReq::Swap(PBC2SUpdateHeroTeamReq* other) {
  if (other != this) {
    heroindex_.Swap(&other->heroindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2SUpdateHeroTeamReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2SUpdateHeroTeamReq_descriptor_;
  metadata.reflection = PBC2SUpdateHeroTeamReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBS2CUpdateHeroTeamRes::kUpdateHeroTeamResultFieldNumber;
#endif  // !_MSC_VER

PBS2CUpdateHeroTeamRes::PBS2CUpdateHeroTeamRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBS2CUpdateHeroTeamRes)
}

void PBS2CUpdateHeroTeamRes::InitAsDefaultInstance() {
}

PBS2CUpdateHeroTeamRes::PBS2CUpdateHeroTeamRes(const PBS2CUpdateHeroTeamRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBS2CUpdateHeroTeamRes)
}

void PBS2CUpdateHeroTeamRes::SharedCtor() {
  _cached_size_ = 0;
  updateheroteamresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBS2CUpdateHeroTeamRes::~PBS2CUpdateHeroTeamRes() {
  // @@protoc_insertion_point(destructor:PBS2CUpdateHeroTeamRes)
  SharedDtor();
}

void PBS2CUpdateHeroTeamRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBS2CUpdateHeroTeamRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBS2CUpdateHeroTeamRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBS2CUpdateHeroTeamRes_descriptor_;
}

const PBS2CUpdateHeroTeamRes& PBS2CUpdateHeroTeamRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBS2CUpdateHeroTeamRes* PBS2CUpdateHeroTeamRes::default_instance_ = NULL;

PBS2CUpdateHeroTeamRes* PBS2CUpdateHeroTeamRes::New() const {
  return new PBS2CUpdateHeroTeamRes;
}

void PBS2CUpdateHeroTeamRes::Clear() {
  updateheroteamresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBS2CUpdateHeroTeamRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBS2CUpdateHeroTeamRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 UpdateHeroTeamResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &updateheroteamresult_)));
          set_has_updateheroteamresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBS2CUpdateHeroTeamRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBS2CUpdateHeroTeamRes)
  return false;
#undef DO_
}

void PBS2CUpdateHeroTeamRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBS2CUpdateHeroTeamRes)
  // required int32 UpdateHeroTeamResult = 1;
  if (has_updateheroteamresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->updateheroteamresult(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBS2CUpdateHeroTeamRes)
}

::google::protobuf::uint8* PBS2CUpdateHeroTeamRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBS2CUpdateHeroTeamRes)
  // required int32 UpdateHeroTeamResult = 1;
  if (has_updateheroteamresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->updateheroteamresult(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBS2CUpdateHeroTeamRes)
  return target;
}

int PBS2CUpdateHeroTeamRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 UpdateHeroTeamResult = 1;
    if (has_updateheroteamresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->updateheroteamresult());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBS2CUpdateHeroTeamRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBS2CUpdateHeroTeamRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBS2CUpdateHeroTeamRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBS2CUpdateHeroTeamRes::MergeFrom(const PBS2CUpdateHeroTeamRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_updateheroteamresult()) {
      set_updateheroteamresult(from.updateheroteamresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBS2CUpdateHeroTeamRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBS2CUpdateHeroTeamRes::CopyFrom(const PBS2CUpdateHeroTeamRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBS2CUpdateHeroTeamRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBS2CUpdateHeroTeamRes::Swap(PBS2CUpdateHeroTeamRes* other) {
  if (other != this) {
    std::swap(updateheroteamresult_, other->updateheroteamresult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBS2CUpdateHeroTeamRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBS2CUpdateHeroTeamRes_descriptor_;
  metadata.reflection = PBS2CUpdateHeroTeamRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBC2SBuyHeroReq::kHeroIDFieldNumber;
#endif  // !_MSC_VER

PBC2SBuyHeroReq::PBC2SBuyHeroReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBC2SBuyHeroReq)
}

void PBC2SBuyHeroReq::InitAsDefaultInstance() {
}

PBC2SBuyHeroReq::PBC2SBuyHeroReq(const PBC2SBuyHeroReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBC2SBuyHeroReq)
}

void PBC2SBuyHeroReq::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2SBuyHeroReq::~PBC2SBuyHeroReq() {
  // @@protoc_insertion_point(destructor:PBC2SBuyHeroReq)
  SharedDtor();
}

void PBC2SBuyHeroReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBC2SBuyHeroReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2SBuyHeroReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2SBuyHeroReq_descriptor_;
}

const PBC2SBuyHeroReq& PBC2SBuyHeroReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBC2SBuyHeroReq* PBC2SBuyHeroReq::default_instance_ = NULL;

PBC2SBuyHeroReq* PBC2SBuyHeroReq::New() const {
  return new PBC2SBuyHeroReq;
}

void PBC2SBuyHeroReq::Clear() {
  heroid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2SBuyHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBC2SBuyHeroReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 HeroID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBC2SBuyHeroReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBC2SBuyHeroReq)
  return false;
#undef DO_
}

void PBC2SBuyHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBC2SBuyHeroReq)
  // optional int32 HeroID = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->heroid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBC2SBuyHeroReq)
}

::google::protobuf::uint8* PBC2SBuyHeroReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBC2SBuyHeroReq)
  // optional int32 HeroID = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->heroid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBC2SBuyHeroReq)
  return target;
}

int PBC2SBuyHeroReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 HeroID = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2SBuyHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2SBuyHeroReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2SBuyHeroReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2SBuyHeroReq::MergeFrom(const PBC2SBuyHeroReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2SBuyHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2SBuyHeroReq::CopyFrom(const PBC2SBuyHeroReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2SBuyHeroReq::IsInitialized() const {

  return true;
}

void PBC2SBuyHeroReq::Swap(PBC2SBuyHeroReq* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2SBuyHeroReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2SBuyHeroReq_descriptor_;
  metadata.reflection = PBC2SBuyHeroReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBS2CBuyHeroRes::kBuyHeroResultFieldNumber;
#endif  // !_MSC_VER

PBS2CBuyHeroRes::PBS2CBuyHeroRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBS2CBuyHeroRes)
}

void PBS2CBuyHeroRes::InitAsDefaultInstance() {
}

PBS2CBuyHeroRes::PBS2CBuyHeroRes(const PBS2CBuyHeroRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBS2CBuyHeroRes)
}

void PBS2CBuyHeroRes::SharedCtor() {
  _cached_size_ = 0;
  buyheroresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBS2CBuyHeroRes::~PBS2CBuyHeroRes() {
  // @@protoc_insertion_point(destructor:PBS2CBuyHeroRes)
  SharedDtor();
}

void PBS2CBuyHeroRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBS2CBuyHeroRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBS2CBuyHeroRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBS2CBuyHeroRes_descriptor_;
}

const PBS2CBuyHeroRes& PBS2CBuyHeroRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBS2CBuyHeroRes* PBS2CBuyHeroRes::default_instance_ = NULL;

PBS2CBuyHeroRes* PBS2CBuyHeroRes::New() const {
  return new PBS2CBuyHeroRes;
}

void PBS2CBuyHeroRes::Clear() {
  buyheroresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBS2CBuyHeroRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBS2CBuyHeroRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 BuyHeroResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buyheroresult_)));
          set_has_buyheroresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBS2CBuyHeroRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBS2CBuyHeroRes)
  return false;
#undef DO_
}

void PBS2CBuyHeroRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBS2CBuyHeroRes)
  // required int32 BuyHeroResult = 1;
  if (has_buyheroresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->buyheroresult(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBS2CBuyHeroRes)
}

::google::protobuf::uint8* PBS2CBuyHeroRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBS2CBuyHeroRes)
  // required int32 BuyHeroResult = 1;
  if (has_buyheroresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->buyheroresult(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBS2CBuyHeroRes)
  return target;
}

int PBS2CBuyHeroRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 BuyHeroResult = 1;
    if (has_buyheroresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buyheroresult());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBS2CBuyHeroRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBS2CBuyHeroRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBS2CBuyHeroRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBS2CBuyHeroRes::MergeFrom(const PBS2CBuyHeroRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buyheroresult()) {
      set_buyheroresult(from.buyheroresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBS2CBuyHeroRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBS2CBuyHeroRes::CopyFrom(const PBS2CBuyHeroRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBS2CBuyHeroRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBS2CBuyHeroRes::Swap(PBS2CBuyHeroRes* other) {
  if (other != this) {
    std::swap(buyheroresult_, other->buyheroresult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBS2CBuyHeroRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBS2CBuyHeroRes_descriptor_;
  metadata.reflection = PBS2CBuyHeroRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PBC2SGetPlayerListReq::PBC2SGetPlayerListReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBC2SGetPlayerListReq)
}

void PBC2SGetPlayerListReq::InitAsDefaultInstance() {
}

PBC2SGetPlayerListReq::PBC2SGetPlayerListReq(const PBC2SGetPlayerListReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBC2SGetPlayerListReq)
}

void PBC2SGetPlayerListReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2SGetPlayerListReq::~PBC2SGetPlayerListReq() {
  // @@protoc_insertion_point(destructor:PBC2SGetPlayerListReq)
  SharedDtor();
}

void PBC2SGetPlayerListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBC2SGetPlayerListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2SGetPlayerListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2SGetPlayerListReq_descriptor_;
}

const PBC2SGetPlayerListReq& PBC2SGetPlayerListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBC2SGetPlayerListReq* PBC2SGetPlayerListReq::default_instance_ = NULL;

PBC2SGetPlayerListReq* PBC2SGetPlayerListReq::New() const {
  return new PBC2SGetPlayerListReq;
}

void PBC2SGetPlayerListReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2SGetPlayerListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBC2SGetPlayerListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:PBC2SGetPlayerListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBC2SGetPlayerListReq)
  return false;
#undef DO_
}

void PBC2SGetPlayerListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBC2SGetPlayerListReq)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBC2SGetPlayerListReq)
}

::google::protobuf::uint8* PBC2SGetPlayerListReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBC2SGetPlayerListReq)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBC2SGetPlayerListReq)
  return target;
}

int PBC2SGetPlayerListReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2SGetPlayerListReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2SGetPlayerListReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2SGetPlayerListReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2SGetPlayerListReq::MergeFrom(const PBC2SGetPlayerListReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2SGetPlayerListReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2SGetPlayerListReq::CopyFrom(const PBC2SGetPlayerListReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2SGetPlayerListReq::IsInitialized() const {

  return true;
}

void PBC2SGetPlayerListReq::Swap(PBC2SGetPlayerListReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2SGetPlayerListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2SGetPlayerListReq_descriptor_;
  metadata.reflection = PBC2SGetPlayerListReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBPlayer::kPlayerIDFieldNumber;
const int PBPlayer::kUsernameFieldNumber;
#endif  // !_MSC_VER

PBPlayer::PBPlayer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBPlayer)
}

void PBPlayer::InitAsDefaultInstance() {
}

PBPlayer::PBPlayer(const PBPlayer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBPlayer)
}

void PBPlayer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  playerid_ = 0;
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBPlayer::~PBPlayer() {
  // @@protoc_insertion_point(destructor:PBPlayer)
  SharedDtor();
}

void PBPlayer::SharedDtor() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (this != default_instance_) {
  }
}

void PBPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPlayer_descriptor_;
}

const PBPlayer& PBPlayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBPlayer* PBPlayer::default_instance_ = NULL;

PBPlayer* PBPlayer::New() const {
  return new PBPlayer;
}

void PBPlayer::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    playerid_ = 0;
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        username_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBPlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 PlayerID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
          set_has_playerid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Username;
        break;
      }

      // optional string Username = 2;
      case 2: {
        if (tag == 18) {
         parse_Username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBPlayer)
  return false;
#undef DO_
}

void PBPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBPlayer)
  // optional int32 PlayerID = 1;
  if (has_playerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // optional string Username = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBPlayer)
}

::google::protobuf::uint8* PBPlayer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBPlayer)
  // optional int32 PlayerID = 1;
  if (has_playerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // optional string Username = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBPlayer)
  return target;
}

int PBPlayer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 PlayerID = 1;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->playerid());
    }

    // optional string Username = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPlayer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBPlayer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBPlayer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBPlayer::MergeFrom(const PBPlayer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_playerid()) {
      set_playerid(from.playerid());
    }
    if (from.has_username()) {
      set_username(from.username());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBPlayer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPlayer::CopyFrom(const PBPlayer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPlayer::IsInitialized() const {

  return true;
}

void PBPlayer::Swap(PBPlayer* other) {
  if (other != this) {
    std::swap(playerid_, other->playerid_);
    std::swap(username_, other->username_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBPlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPlayer_descriptor_;
  metadata.reflection = PBPlayer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBS2CGetPlayerListRes::kGetPlayerListResultFieldNumber;
const int PBS2CGetPlayerListRes::kPlayerListFieldNumber;
#endif  // !_MSC_VER

PBS2CGetPlayerListRes::PBS2CGetPlayerListRes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBS2CGetPlayerListRes)
}

void PBS2CGetPlayerListRes::InitAsDefaultInstance() {
}

PBS2CGetPlayerListRes::PBS2CGetPlayerListRes(const PBS2CGetPlayerListRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBS2CGetPlayerListRes)
}

void PBS2CGetPlayerListRes::SharedCtor() {
  _cached_size_ = 0;
  getplayerlistresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBS2CGetPlayerListRes::~PBS2CGetPlayerListRes() {
  // @@protoc_insertion_point(destructor:PBS2CGetPlayerListRes)
  SharedDtor();
}

void PBS2CGetPlayerListRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBS2CGetPlayerListRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBS2CGetPlayerListRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBS2CGetPlayerListRes_descriptor_;
}

const PBS2CGetPlayerListRes& PBS2CGetPlayerListRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClientMessage_2eproto();
  return *default_instance_;
}

PBS2CGetPlayerListRes* PBS2CGetPlayerListRes::default_instance_ = NULL;

PBS2CGetPlayerListRes* PBS2CGetPlayerListRes::New() const {
  return new PBS2CGetPlayerListRes;
}

void PBS2CGetPlayerListRes::Clear() {
  getplayerlistresult_ = 0;
  playerlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBS2CGetPlayerListRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBS2CGetPlayerListRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 GetPlayerListResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &getplayerlistresult_)));
          set_has_getplayerlistresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_PlayerList;
        break;
      }

      // repeated .PBPlayer PlayerList = 2;
      case 2: {
        if (tag == 18) {
         parse_PlayerList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_playerlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_PlayerList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBS2CGetPlayerListRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBS2CGetPlayerListRes)
  return false;
#undef DO_
}

void PBS2CGetPlayerListRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBS2CGetPlayerListRes)
  // required int32 GetPlayerListResult = 1;
  if (has_getplayerlistresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->getplayerlistresult(), output);
  }

  // repeated .PBPlayer PlayerList = 2;
  for (int i = 0; i < this->playerlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->playerlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBS2CGetPlayerListRes)
}

::google::protobuf::uint8* PBS2CGetPlayerListRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBS2CGetPlayerListRes)
  // required int32 GetPlayerListResult = 1;
  if (has_getplayerlistresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->getplayerlistresult(), target);
  }

  // repeated .PBPlayer PlayerList = 2;
  for (int i = 0; i < this->playerlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->playerlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBS2CGetPlayerListRes)
  return target;
}

int PBS2CGetPlayerListRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 GetPlayerListResult = 1;
    if (has_getplayerlistresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->getplayerlistresult());
    }

  }
  // repeated .PBPlayer PlayerList = 2;
  total_size += 1 * this->playerlist_size();
  for (int i = 0; i < this->playerlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->playerlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBS2CGetPlayerListRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBS2CGetPlayerListRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBS2CGetPlayerListRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBS2CGetPlayerListRes::MergeFrom(const PBS2CGetPlayerListRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  playerlist_.MergeFrom(from.playerlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_getplayerlistresult()) {
      set_getplayerlistresult(from.getplayerlistresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBS2CGetPlayerListRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBS2CGetPlayerListRes::CopyFrom(const PBS2CGetPlayerListRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBS2CGetPlayerListRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBS2CGetPlayerListRes::Swap(PBS2CGetPlayerListRes* other) {
  if (other != this) {
    std::swap(getplayerlistresult_, other->getplayerlistresult_);
    playerlist_.Swap(&other->playerlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBS2CGetPlayerListRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBS2CGetPlayerListRes_descriptor_;
  metadata.reflection = PBS2CGetPlayerListRes_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
